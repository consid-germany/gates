name: ui
on:
  workflow_call:
    inputs:
      api-base-url:
        type: string
        default: http://localhost:9000/api

jobs:
  lint-and-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          cache-dependency-path: ui
          node-version: lts/*

      - uses: SpicyPizza/create-envfile@v2
        with:
          directory: ui
          envkey_PUBLIC_API_BASE_URL: ${{ inputs.api-base-url }}

      - run: npm ci
        working-directory: ui

      - run: npm run lint
        working-directory: ui

      - run: npm run check
        working-directory: ui

  unit-test:
    needs: lint-and-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          cache-dependency-path: ui
          node-version: lts/*

      - uses: SpicyPizza/create-envfile@v2
        with:
          directory: ui
          envkey_PUBLIC_API_BASE_URL: ${{ inputs.api-base-url }}

      - run: npm ci
        working-directory: ui

      - run: npm run test:unit
        working-directory: ui

  integration-test:
    needs: lint-and-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "api"

      - name: Install cargo-lambda
        uses: jaxxstorm/action-install-gh-release@v1.11.0
        with:
          repo: cargo-lambda/cargo-lambda
          cache: enable

      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          cache-dependency-path: ui
          node-version: lts/*

      - uses: SpicyPizza/create-envfile@v2
        with:
          directory: ui
          envkey_PUBLIC_API_BASE_URL: ${{ inputs.api-base-url }}

      - run: npm ci
        working-directory: ui

      - name: Start dynamodb-local
        run: docker run --rm -d -p 8000:8000 amazon/dynamodb-local

      - name: Build api
        run: cargo build
        working-directory: api

      - name: Start api
        run: npx pm2 start "cargo lambda watch --features local"
        working-directory: api

      - name: Get api info
        run: curl --retry 3 --retry-all-errors ${{ inputs.api-base-url }}/

      - uses: actions/cache@v4
        id: cache-playwright
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

      - run: npx playwright install --with-deps
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        working-directory: ui

      - run: npm run test:integration
        working-directory: ui

      - name: Stop api
        if: always()
        run: npx pm2 delete all

      - name: Stop dynamodb-local
        if: always()
        run: docker rm -f $(docker ps -a -q)
