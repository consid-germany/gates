/*
 * Gates API
 *
 * OpenAPI specification for the Gates API
 *
 * The version of the OpenAPI document: 1.12.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Service : Service is the level between Group an Environment. A service is part of a group and has multiple environments. A group consists basically of services.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Service {
    /// This can be anything an should represent an business aspect of your services.
    #[serde(rename = "name")]
    pub name: String,
    /// Environments serve as a way to group your technical and procedural needs. Most teams have a production environment, a stageing env and a develop env.
    #[serde(rename = "environments")]
    pub environments: Vec<models::Environment>,
}

impl Service {
    /// Service is the level between Group an Environment. A service is part of a group and has multiple environments. A group consists basically of services.
    pub fn new(name: String, environments: Vec<models::Environment>) -> Service {
        Service {
            name,
            environments,
        }
    }
}

