/*
 * Gates API
 *
 * OpenAPI specification for the Gates API
 *
 * The version of the OpenAPI document: 1.12.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Environment : Environments serve as a way to group your technical and procedural needs. An environemnt has a single parent called service and consists of many gates. Most teams have a production environment, a stageing env and a develop env. A good practive could be to close the production gate ,from Friday to Monday to reduce work on weekends if a mishap happens.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Environment {
    /// Identifies the stage of your gate. Meaningful choices are product, live, develop, integration, staging, etc...
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "gate")]
    pub gate: Box<models::Gate>,
}

impl Environment {
    /// Environments serve as a way to group your technical and procedural needs. An environemnt has a single parent called service and consists of many gates. Most teams have a production environment, a stageing env and a develop env. A good practive could be to close the production gate ,from Friday to Monday to reduce work on weekends if a mishap happens.
    pub fn new(name: String, gate: models::Gate) -> Environment {
        Environment {
            name,
            gate: Box::new(gate),
        }
    }
}

