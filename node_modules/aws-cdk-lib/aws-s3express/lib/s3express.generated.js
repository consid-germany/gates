"use strict";var _a,_b;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnDirectoryBucket=exports.CfnBucketPolicy=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp};class CfnBucketPolicy extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnBucketPolicyPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnBucketPolicy(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnBucketPolicy.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_s3express_CfnBucketPolicyProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnBucketPolicy),error}cdk().requireProperty(props,"bucket",this),cdk().requireProperty(props,"policyDocument",this),this.bucket=props.bucket,this.policyDocument=props.policyDocument}get cfnProperties(){return{bucket:this.bucket,policyDocument:this.policyDocument}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnBucketPolicy.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnBucketPolicyPropsToCloudFormation(props)}}exports.CfnBucketPolicy=CfnBucketPolicy,_a=JSII_RTTI_SYMBOL_1,CfnBucketPolicy[_a]={fqn:"aws-cdk-lib.aws_s3express.CfnBucketPolicy",version:"2.136.1"},CfnBucketPolicy.CFN_RESOURCE_TYPE_NAME="AWS::S3Express::BucketPolicy";function CfnBucketPolicyPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("bucket",cdk().requiredValidator)(properties.bucket)),errors.collect(cdk().propertyValidator("bucket",cdk().validateString)(properties.bucket)),errors.collect(cdk().propertyValidator("policyDocument",cdk().requiredValidator)(properties.policyDocument)),errors.collect(cdk().propertyValidator("policyDocument",cdk().unionValidator(cdk().validateString,cdk().validateObject))(properties.policyDocument)),errors.wrap('supplied properties not correct for "CfnBucketPolicyProps"')}function convertCfnBucketPolicyPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBucketPolicyPropsValidator(properties).assertSuccess(),{Bucket:cdk().stringToCloudFormation(properties.bucket),PolicyDocument:cdk().unionMapper([cdk().validateString,cdk().validateObject],[cdk().stringToCloudFormation,cdk().objectToCloudFormation])(properties.policyDocument)}):properties}function CfnBucketPolicyPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("bucket","Bucket",properties.Bucket!=null?cfn_parse().FromCloudFormation.getString(properties.Bucket):void 0),ret.addPropertyResult("policyDocument","PolicyDocument",properties.PolicyDocument!=null?cfn_parse().FromCloudFormation.getTypeUnion([cdk().validateString,cdk().validateObject],[cfn_parse().FromCloudFormation.getString,cfn_parse().FromCloudFormation.getAny])(properties.PolicyDocument):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDirectoryBucket extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDirectoryBucketPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDirectoryBucket(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDirectoryBucket.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_s3express_CfnDirectoryBucketProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDirectoryBucket),error}cdk().requireProperty(props,"dataRedundancy",this),cdk().requireProperty(props,"locationName",this),this.attrArn=cdk().Token.asString(this.getAtt("Arn",cdk().ResolutionTypeHint.STRING)),this.bucketName=props.bucketName,this.dataRedundancy=props.dataRedundancy,this.locationName=props.locationName}get cfnProperties(){return{bucketName:this.bucketName,dataRedundancy:this.dataRedundancy,locationName:this.locationName}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDirectoryBucket.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDirectoryBucketPropsToCloudFormation(props)}}exports.CfnDirectoryBucket=CfnDirectoryBucket,_b=JSII_RTTI_SYMBOL_1,CfnDirectoryBucket[_b]={fqn:"aws-cdk-lib.aws_s3express.CfnDirectoryBucket",version:"2.136.1"},CfnDirectoryBucket.CFN_RESOURCE_TYPE_NAME="AWS::S3Express::DirectoryBucket";function CfnDirectoryBucketPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("bucketName",cdk().validateString)(properties.bucketName)),errors.collect(cdk().propertyValidator("dataRedundancy",cdk().requiredValidator)(properties.dataRedundancy)),errors.collect(cdk().propertyValidator("dataRedundancy",cdk().validateString)(properties.dataRedundancy)),errors.collect(cdk().propertyValidator("locationName",cdk().requiredValidator)(properties.locationName)),errors.collect(cdk().propertyValidator("locationName",cdk().validateString)(properties.locationName)),errors.wrap('supplied properties not correct for "CfnDirectoryBucketProps"')}function convertCfnDirectoryBucketPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDirectoryBucketPropsValidator(properties).assertSuccess(),{BucketName:cdk().stringToCloudFormation(properties.bucketName),DataRedundancy:cdk().stringToCloudFormation(properties.dataRedundancy),LocationName:cdk().stringToCloudFormation(properties.locationName)}):properties}function CfnDirectoryBucketPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("bucketName","BucketName",properties.BucketName!=null?cfn_parse().FromCloudFormation.getString(properties.BucketName):void 0),ret.addPropertyResult("dataRedundancy","DataRedundancy",properties.DataRedundancy!=null?cfn_parse().FromCloudFormation.getString(properties.DataRedundancy):void 0),ret.addPropertyResult("locationName","LocationName",properties.LocationName!=null?cfn_parse().FromCloudFormation.getString(properties.LocationName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
