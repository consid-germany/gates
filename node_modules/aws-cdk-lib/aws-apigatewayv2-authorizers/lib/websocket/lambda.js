"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.WebSocketLambdaAuthorizer=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var aws_apigatewayv2_1=()=>{var tmp=require("../../../aws-apigatewayv2");return aws_apigatewayv2_1=()=>tmp,tmp},aws_iam_1=()=>{var tmp=require("../../../aws-iam");return aws_iam_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../../core");return core_1=()=>tmp,tmp};class WebSocketLambdaAuthorizer{constructor(id,handler,props={}){this.id=id,this.handler=handler,this.props=props;try{jsiiDeprecationWarnings().aws_cdk_lib_aws_lambda_IFunction(handler),jsiiDeprecationWarnings().aws_cdk_lib_aws_apigatewayv2_authorizers_WebSocketLambdaAuthorizerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,WebSocketLambdaAuthorizer),error}}bind(options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_apigatewayv2_WebSocketRouteAuthorizerBindOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.bind),error}if(this.webSocketApi&&this.webSocketApi.apiId!==options.route.webSocketApi.apiId)throw new Error("Cannot attach the same authorizer to multiple Apis");return this.authorizer||(this.webSocketApi=options.route.webSocketApi,this.authorizer=new(aws_apigatewayv2_1()).WebSocketAuthorizer(options.scope,this.id,{webSocketApi:options.route.webSocketApi,identitySource:this.props.identitySource??["route.request.header.Authorization"],type:aws_apigatewayv2_1().WebSocketAuthorizerType.LAMBDA,authorizerName:this.props.authorizerName??this.id,authorizerUri:lambdaAuthorizerArn(this.handler)}),this.handler.addPermission(`${core_1().Names.nodeUniqueId(this.authorizer.node)}-Permission`,{scope:options.scope,principal:new(aws_iam_1()).ServicePrincipal("apigateway.amazonaws.com"),sourceArn:core_1().Stack.of(options.route).formatArn({service:"execute-api",resource:options.route.webSocketApi.apiId,resourceName:`authorizers/${this.authorizer.authorizerId}`})})),{authorizerId:this.authorizer.authorizerId,authorizationType:"CUSTOM"}}}exports.WebSocketLambdaAuthorizer=WebSocketLambdaAuthorizer,_a=JSII_RTTI_SYMBOL_1,WebSocketLambdaAuthorizer[_a]={fqn:"aws-cdk-lib.aws_apigatewayv2_authorizers.WebSocketLambdaAuthorizer",version:"2.136.1"};function lambdaAuthorizerArn(handler){return`arn:${core_1().Stack.of(handler).partition}:apigateway:${core_1().Stack.of(handler).region}:lambda:path/2015-03-31/functions/${handler.functionArn}/invocations`}
