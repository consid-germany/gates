"use strict";var _a,_b,_c,_d,_e,_f,_g,_h;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnUserSettings=exports.CfnUserAccessLoggingSettings=exports.CfnTrustStore=exports.CfnPortal=exports.CfnNetworkSettings=exports.CfnIpAccessSettings=exports.CfnIdentityProvider=exports.CfnBrowserSettings=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp};class CfnBrowserSettings extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnBrowserSettingsPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnBrowserSettings(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnBrowserSettings.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_workspacesweb_CfnBrowserSettingsProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnBrowserSettings),error}this.attrAssociatedPortalArns=cdk().Token.asList(this.getAtt("AssociatedPortalArns",cdk().ResolutionTypeHint.STRING_LIST)),this.attrBrowserSettingsArn=cdk().Token.asString(this.getAtt("BrowserSettingsArn",cdk().ResolutionTypeHint.STRING)),this.additionalEncryptionContext=props.additionalEncryptionContext,this.browserPolicy=props.browserPolicy,this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::WorkSpacesWeb::BrowserSettings",void 0,{tagPropertyName:"tags"}),this.customerManagedKey=props.customerManagedKey,this.tags=props.tags}get cfnProperties(){return{additionalEncryptionContext:this.additionalEncryptionContext,browserPolicy:this.browserPolicy,tags:this.cdkTagManager.renderTags(this.tags),customerManagedKey:this.customerManagedKey}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnBrowserSettings.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnBrowserSettingsPropsToCloudFormation(props)}}exports.CfnBrowserSettings=CfnBrowserSettings,_a=JSII_RTTI_SYMBOL_1,CfnBrowserSettings[_a]={fqn:"aws-cdk-lib.aws_workspacesweb.CfnBrowserSettings",version:"2.136.1"},CfnBrowserSettings.CFN_RESOURCE_TYPE_NAME="AWS::WorkSpacesWeb::BrowserSettings";function CfnBrowserSettingsPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("additionalEncryptionContext",cdk().hashValidator(cdk().validateString))(properties.additionalEncryptionContext)),errors.collect(cdk().propertyValidator("browserPolicy",cdk().validateString)(properties.browserPolicy)),errors.collect(cdk().propertyValidator("customerManagedKey",cdk().validateString)(properties.customerManagedKey)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnBrowserSettingsProps"')}function convertCfnBrowserSettingsPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBrowserSettingsPropsValidator(properties).assertSuccess(),{AdditionalEncryptionContext:cdk().hashMapper(cdk().stringToCloudFormation)(properties.additionalEncryptionContext),BrowserPolicy:cdk().stringToCloudFormation(properties.browserPolicy),CustomerManagedKey:cdk().stringToCloudFormation(properties.customerManagedKey),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnBrowserSettingsPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("additionalEncryptionContext","AdditionalEncryptionContext",properties.AdditionalEncryptionContext!=null?cfn_parse().FromCloudFormation.getMap(cfn_parse().FromCloudFormation.getString)(properties.AdditionalEncryptionContext):void 0),ret.addPropertyResult("browserPolicy","BrowserPolicy",properties.BrowserPolicy!=null?cfn_parse().FromCloudFormation.getString(properties.BrowserPolicy):void 0),ret.addPropertyResult("customerManagedKey","CustomerManagedKey",properties.CustomerManagedKey!=null?cfn_parse().FromCloudFormation.getString(properties.CustomerManagedKey):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnIdentityProvider extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnIdentityProviderPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnIdentityProvider(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnIdentityProvider.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_workspacesweb_CfnIdentityProviderProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnIdentityProvider),error}cdk().requireProperty(props,"identityProviderDetails",this),cdk().requireProperty(props,"identityProviderName",this),cdk().requireProperty(props,"identityProviderType",this),this.attrIdentityProviderArn=cdk().Token.asString(this.getAtt("IdentityProviderArn",cdk().ResolutionTypeHint.STRING)),this.identityProviderDetails=props.identityProviderDetails,this.identityProviderName=props.identityProviderName,this.identityProviderType=props.identityProviderType,this.portalArn=props.portalArn}get cfnProperties(){return{identityProviderDetails:this.identityProviderDetails,identityProviderName:this.identityProviderName,identityProviderType:this.identityProviderType,portalArn:this.portalArn}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnIdentityProvider.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnIdentityProviderPropsToCloudFormation(props)}}exports.CfnIdentityProvider=CfnIdentityProvider,_b=JSII_RTTI_SYMBOL_1,CfnIdentityProvider[_b]={fqn:"aws-cdk-lib.aws_workspacesweb.CfnIdentityProvider",version:"2.136.1"},CfnIdentityProvider.CFN_RESOURCE_TYPE_NAME="AWS::WorkSpacesWeb::IdentityProvider";function CfnIdentityProviderPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("identityProviderDetails",cdk().requiredValidator)(properties.identityProviderDetails)),errors.collect(cdk().propertyValidator("identityProviderDetails",cdk().hashValidator(cdk().validateString))(properties.identityProviderDetails)),errors.collect(cdk().propertyValidator("identityProviderName",cdk().requiredValidator)(properties.identityProviderName)),errors.collect(cdk().propertyValidator("identityProviderName",cdk().validateString)(properties.identityProviderName)),errors.collect(cdk().propertyValidator("identityProviderType",cdk().requiredValidator)(properties.identityProviderType)),errors.collect(cdk().propertyValidator("identityProviderType",cdk().validateString)(properties.identityProviderType)),errors.collect(cdk().propertyValidator("portalArn",cdk().validateString)(properties.portalArn)),errors.wrap('supplied properties not correct for "CfnIdentityProviderProps"')}function convertCfnIdentityProviderPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnIdentityProviderPropsValidator(properties).assertSuccess(),{IdentityProviderDetails:cdk().hashMapper(cdk().stringToCloudFormation)(properties.identityProviderDetails),IdentityProviderName:cdk().stringToCloudFormation(properties.identityProviderName),IdentityProviderType:cdk().stringToCloudFormation(properties.identityProviderType),PortalArn:cdk().stringToCloudFormation(properties.portalArn)}):properties}function CfnIdentityProviderPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("identityProviderDetails","IdentityProviderDetails",properties.IdentityProviderDetails!=null?cfn_parse().FromCloudFormation.getMap(cfn_parse().FromCloudFormation.getString)(properties.IdentityProviderDetails):void 0),ret.addPropertyResult("identityProviderName","IdentityProviderName",properties.IdentityProviderName!=null?cfn_parse().FromCloudFormation.getString(properties.IdentityProviderName):void 0),ret.addPropertyResult("identityProviderType","IdentityProviderType",properties.IdentityProviderType!=null?cfn_parse().FromCloudFormation.getString(properties.IdentityProviderType):void 0),ret.addPropertyResult("portalArn","PortalArn",properties.PortalArn!=null?cfn_parse().FromCloudFormation.getString(properties.PortalArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnIpAccessSettings extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnIpAccessSettingsPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnIpAccessSettings(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnIpAccessSettings.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_workspacesweb_CfnIpAccessSettingsProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnIpAccessSettings),error}cdk().requireProperty(props,"ipRules",this),this.attrAssociatedPortalArns=cdk().Token.asList(this.getAtt("AssociatedPortalArns",cdk().ResolutionTypeHint.STRING_LIST)),this.attrCreationDate=cdk().Token.asString(this.getAtt("CreationDate",cdk().ResolutionTypeHint.STRING)),this.attrIpAccessSettingsArn=cdk().Token.asString(this.getAtt("IpAccessSettingsArn",cdk().ResolutionTypeHint.STRING)),this.additionalEncryptionContext=props.additionalEncryptionContext,this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::WorkSpacesWeb::IpAccessSettings",void 0,{tagPropertyName:"tags"}),this.customerManagedKey=props.customerManagedKey,this.description=props.description,this.displayName=props.displayName,this.ipRules=props.ipRules,this.tags=props.tags}get cfnProperties(){return{additionalEncryptionContext:this.additionalEncryptionContext,tags:this.cdkTagManager.renderTags(this.tags),customerManagedKey:this.customerManagedKey,description:this.description,displayName:this.displayName,ipRules:this.ipRules}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnIpAccessSettings.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnIpAccessSettingsPropsToCloudFormation(props)}}exports.CfnIpAccessSettings=CfnIpAccessSettings,_c=JSII_RTTI_SYMBOL_1,CfnIpAccessSettings[_c]={fqn:"aws-cdk-lib.aws_workspacesweb.CfnIpAccessSettings",version:"2.136.1"},CfnIpAccessSettings.CFN_RESOURCE_TYPE_NAME="AWS::WorkSpacesWeb::IpAccessSettings";function CfnIpAccessSettingsIpRulePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("description",cdk().validateString)(properties.description)),errors.collect(cdk().propertyValidator("ipRange",cdk().requiredValidator)(properties.ipRange)),errors.collect(cdk().propertyValidator("ipRange",cdk().validateString)(properties.ipRange)),errors.wrap('supplied properties not correct for "IpRuleProperty"')}function convertCfnIpAccessSettingsIpRulePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnIpAccessSettingsIpRulePropertyValidator(properties).assertSuccess(),{Description:cdk().stringToCloudFormation(properties.description),IpRange:cdk().stringToCloudFormation(properties.ipRange)}):properties}function CfnIpAccessSettingsIpRulePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse().FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("ipRange","IpRange",properties.IpRange!=null?cfn_parse().FromCloudFormation.getString(properties.IpRange):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnIpAccessSettingsPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("additionalEncryptionContext",cdk().hashValidator(cdk().validateString))(properties.additionalEncryptionContext)),errors.collect(cdk().propertyValidator("customerManagedKey",cdk().validateString)(properties.customerManagedKey)),errors.collect(cdk().propertyValidator("description",cdk().validateString)(properties.description)),errors.collect(cdk().propertyValidator("displayName",cdk().validateString)(properties.displayName)),errors.collect(cdk().propertyValidator("ipRules",cdk().requiredValidator)(properties.ipRules)),errors.collect(cdk().propertyValidator("ipRules",cdk().listValidator(CfnIpAccessSettingsIpRulePropertyValidator))(properties.ipRules)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnIpAccessSettingsProps"')}function convertCfnIpAccessSettingsPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnIpAccessSettingsPropsValidator(properties).assertSuccess(),{AdditionalEncryptionContext:cdk().hashMapper(cdk().stringToCloudFormation)(properties.additionalEncryptionContext),CustomerManagedKey:cdk().stringToCloudFormation(properties.customerManagedKey),Description:cdk().stringToCloudFormation(properties.description),DisplayName:cdk().stringToCloudFormation(properties.displayName),IpRules:cdk().listMapper(convertCfnIpAccessSettingsIpRulePropertyToCloudFormation)(properties.ipRules),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnIpAccessSettingsPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("additionalEncryptionContext","AdditionalEncryptionContext",properties.AdditionalEncryptionContext!=null?cfn_parse().FromCloudFormation.getMap(cfn_parse().FromCloudFormation.getString)(properties.AdditionalEncryptionContext):void 0),ret.addPropertyResult("customerManagedKey","CustomerManagedKey",properties.CustomerManagedKey!=null?cfn_parse().FromCloudFormation.getString(properties.CustomerManagedKey):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse().FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("displayName","DisplayName",properties.DisplayName!=null?cfn_parse().FromCloudFormation.getString(properties.DisplayName):void 0),ret.addPropertyResult("ipRules","IpRules",properties.IpRules!=null?cfn_parse().FromCloudFormation.getArray(CfnIpAccessSettingsIpRulePropertyFromCloudFormation)(properties.IpRules):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnNetworkSettings extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnNetworkSettingsPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnNetworkSettings(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnNetworkSettings.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_workspacesweb_CfnNetworkSettingsProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnNetworkSettings),error}cdk().requireProperty(props,"securityGroupIds",this),cdk().requireProperty(props,"subnetIds",this),cdk().requireProperty(props,"vpcId",this),this.attrAssociatedPortalArns=cdk().Token.asList(this.getAtt("AssociatedPortalArns",cdk().ResolutionTypeHint.STRING_LIST)),this.attrNetworkSettingsArn=cdk().Token.asString(this.getAtt("NetworkSettingsArn",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::WorkSpacesWeb::NetworkSettings",void 0,{tagPropertyName:"tags"}),this.securityGroupIds=props.securityGroupIds,this.subnetIds=props.subnetIds,this.tags=props.tags,this.vpcId=props.vpcId}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),securityGroupIds:this.securityGroupIds,subnetIds:this.subnetIds,vpcId:this.vpcId}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnNetworkSettings.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnNetworkSettingsPropsToCloudFormation(props)}}exports.CfnNetworkSettings=CfnNetworkSettings,_d=JSII_RTTI_SYMBOL_1,CfnNetworkSettings[_d]={fqn:"aws-cdk-lib.aws_workspacesweb.CfnNetworkSettings",version:"2.136.1"},CfnNetworkSettings.CFN_RESOURCE_TYPE_NAME="AWS::WorkSpacesWeb::NetworkSettings";function CfnNetworkSettingsPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("securityGroupIds",cdk().requiredValidator)(properties.securityGroupIds)),errors.collect(cdk().propertyValidator("securityGroupIds",cdk().listValidator(cdk().validateString))(properties.securityGroupIds)),errors.collect(cdk().propertyValidator("subnetIds",cdk().requiredValidator)(properties.subnetIds)),errors.collect(cdk().propertyValidator("subnetIds",cdk().listValidator(cdk().validateString))(properties.subnetIds)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.collect(cdk().propertyValidator("vpcId",cdk().requiredValidator)(properties.vpcId)),errors.collect(cdk().propertyValidator("vpcId",cdk().validateString)(properties.vpcId)),errors.wrap('supplied properties not correct for "CfnNetworkSettingsProps"')}function convertCfnNetworkSettingsPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnNetworkSettingsPropsValidator(properties).assertSuccess(),{SecurityGroupIds:cdk().listMapper(cdk().stringToCloudFormation)(properties.securityGroupIds),SubnetIds:cdk().listMapper(cdk().stringToCloudFormation)(properties.subnetIds),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags),VpcId:cdk().stringToCloudFormation(properties.vpcId)}):properties}function CfnNetworkSettingsPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("securityGroupIds","SecurityGroupIds",properties.SecurityGroupIds!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.SecurityGroupIds):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.SubnetIds):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcId","VpcId",properties.VpcId!=null?cfn_parse().FromCloudFormation.getString(properties.VpcId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnPortal extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnPortalPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnPortal(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnPortal.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_workspacesweb_CfnPortalProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnPortal),error}this.attrBrowserType=cdk().Token.asString(this.getAtt("BrowserType",cdk().ResolutionTypeHint.STRING)),this.attrCreationDate=cdk().Token.asString(this.getAtt("CreationDate",cdk().ResolutionTypeHint.STRING)),this.attrPortalArn=cdk().Token.asString(this.getAtt("PortalArn",cdk().ResolutionTypeHint.STRING)),this.attrPortalEndpoint=cdk().Token.asString(this.getAtt("PortalEndpoint",cdk().ResolutionTypeHint.STRING)),this.attrPortalStatus=cdk().Token.asString(this.getAtt("PortalStatus",cdk().ResolutionTypeHint.STRING)),this.attrRendererType=cdk().Token.asString(this.getAtt("RendererType",cdk().ResolutionTypeHint.STRING)),this.attrServiceProviderSamlMetadata=cdk().Token.asString(this.getAtt("ServiceProviderSamlMetadata",cdk().ResolutionTypeHint.STRING)),this.attrStatusReason=cdk().Token.asString(this.getAtt("StatusReason",cdk().ResolutionTypeHint.STRING)),this.additionalEncryptionContext=props.additionalEncryptionContext,this.authenticationType=props.authenticationType,this.browserSettingsArn=props.browserSettingsArn,this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::WorkSpacesWeb::Portal",void 0,{tagPropertyName:"tags"}),this.customerManagedKey=props.customerManagedKey,this.displayName=props.displayName,this.ipAccessSettingsArn=props.ipAccessSettingsArn,this.networkSettingsArn=props.networkSettingsArn,this.tags=props.tags,this.trustStoreArn=props.trustStoreArn,this.userAccessLoggingSettingsArn=props.userAccessLoggingSettingsArn,this.userSettingsArn=props.userSettingsArn}get cfnProperties(){return{additionalEncryptionContext:this.additionalEncryptionContext,authenticationType:this.authenticationType,browserSettingsArn:this.browserSettingsArn,tags:this.cdkTagManager.renderTags(this.tags),customerManagedKey:this.customerManagedKey,displayName:this.displayName,ipAccessSettingsArn:this.ipAccessSettingsArn,networkSettingsArn:this.networkSettingsArn,trustStoreArn:this.trustStoreArn,userAccessLoggingSettingsArn:this.userAccessLoggingSettingsArn,userSettingsArn:this.userSettingsArn}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnPortal.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnPortalPropsToCloudFormation(props)}}exports.CfnPortal=CfnPortal,_e=JSII_RTTI_SYMBOL_1,CfnPortal[_e]={fqn:"aws-cdk-lib.aws_workspacesweb.CfnPortal",version:"2.136.1"},CfnPortal.CFN_RESOURCE_TYPE_NAME="AWS::WorkSpacesWeb::Portal";function CfnPortalPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("additionalEncryptionContext",cdk().hashValidator(cdk().validateString))(properties.additionalEncryptionContext)),errors.collect(cdk().propertyValidator("authenticationType",cdk().validateString)(properties.authenticationType)),errors.collect(cdk().propertyValidator("browserSettingsArn",cdk().validateString)(properties.browserSettingsArn)),errors.collect(cdk().propertyValidator("customerManagedKey",cdk().validateString)(properties.customerManagedKey)),errors.collect(cdk().propertyValidator("displayName",cdk().validateString)(properties.displayName)),errors.collect(cdk().propertyValidator("ipAccessSettingsArn",cdk().validateString)(properties.ipAccessSettingsArn)),errors.collect(cdk().propertyValidator("networkSettingsArn",cdk().validateString)(properties.networkSettingsArn)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.collect(cdk().propertyValidator("trustStoreArn",cdk().validateString)(properties.trustStoreArn)),errors.collect(cdk().propertyValidator("userAccessLoggingSettingsArn",cdk().validateString)(properties.userAccessLoggingSettingsArn)),errors.collect(cdk().propertyValidator("userSettingsArn",cdk().validateString)(properties.userSettingsArn)),errors.wrap('supplied properties not correct for "CfnPortalProps"')}function convertCfnPortalPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnPortalPropsValidator(properties).assertSuccess(),{AdditionalEncryptionContext:cdk().hashMapper(cdk().stringToCloudFormation)(properties.additionalEncryptionContext),AuthenticationType:cdk().stringToCloudFormation(properties.authenticationType),BrowserSettingsArn:cdk().stringToCloudFormation(properties.browserSettingsArn),CustomerManagedKey:cdk().stringToCloudFormation(properties.customerManagedKey),DisplayName:cdk().stringToCloudFormation(properties.displayName),IpAccessSettingsArn:cdk().stringToCloudFormation(properties.ipAccessSettingsArn),NetworkSettingsArn:cdk().stringToCloudFormation(properties.networkSettingsArn),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags),TrustStoreArn:cdk().stringToCloudFormation(properties.trustStoreArn),UserAccessLoggingSettingsArn:cdk().stringToCloudFormation(properties.userAccessLoggingSettingsArn),UserSettingsArn:cdk().stringToCloudFormation(properties.userSettingsArn)}):properties}function CfnPortalPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("additionalEncryptionContext","AdditionalEncryptionContext",properties.AdditionalEncryptionContext!=null?cfn_parse().FromCloudFormation.getMap(cfn_parse().FromCloudFormation.getString)(properties.AdditionalEncryptionContext):void 0),ret.addPropertyResult("authenticationType","AuthenticationType",properties.AuthenticationType!=null?cfn_parse().FromCloudFormation.getString(properties.AuthenticationType):void 0),ret.addPropertyResult("browserSettingsArn","BrowserSettingsArn",properties.BrowserSettingsArn!=null?cfn_parse().FromCloudFormation.getString(properties.BrowserSettingsArn):void 0),ret.addPropertyResult("customerManagedKey","CustomerManagedKey",properties.CustomerManagedKey!=null?cfn_parse().FromCloudFormation.getString(properties.CustomerManagedKey):void 0),ret.addPropertyResult("displayName","DisplayName",properties.DisplayName!=null?cfn_parse().FromCloudFormation.getString(properties.DisplayName):void 0),ret.addPropertyResult("ipAccessSettingsArn","IpAccessSettingsArn",properties.IpAccessSettingsArn!=null?cfn_parse().FromCloudFormation.getString(properties.IpAccessSettingsArn):void 0),ret.addPropertyResult("networkSettingsArn","NetworkSettingsArn",properties.NetworkSettingsArn!=null?cfn_parse().FromCloudFormation.getString(properties.NetworkSettingsArn):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("trustStoreArn","TrustStoreArn",properties.TrustStoreArn!=null?cfn_parse().FromCloudFormation.getString(properties.TrustStoreArn):void 0),ret.addPropertyResult("userAccessLoggingSettingsArn","UserAccessLoggingSettingsArn",properties.UserAccessLoggingSettingsArn!=null?cfn_parse().FromCloudFormation.getString(properties.UserAccessLoggingSettingsArn):void 0),ret.addPropertyResult("userSettingsArn","UserSettingsArn",properties.UserSettingsArn!=null?cfn_parse().FromCloudFormation.getString(properties.UserSettingsArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTrustStore extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTrustStorePropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnTrustStore(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnTrustStore.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_workspacesweb_CfnTrustStoreProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnTrustStore),error}cdk().requireProperty(props,"certificateList",this),this.attrAssociatedPortalArns=cdk().Token.asList(this.getAtt("AssociatedPortalArns",cdk().ResolutionTypeHint.STRING_LIST)),this.attrTrustStoreArn=cdk().Token.asString(this.getAtt("TrustStoreArn",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::WorkSpacesWeb::TrustStore",void 0,{tagPropertyName:"tags"}),this.certificateList=props.certificateList,this.tags=props.tags}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),certificateList:this.certificateList}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnTrustStore.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnTrustStorePropsToCloudFormation(props)}}exports.CfnTrustStore=CfnTrustStore,_f=JSII_RTTI_SYMBOL_1,CfnTrustStore[_f]={fqn:"aws-cdk-lib.aws_workspacesweb.CfnTrustStore",version:"2.136.1"},CfnTrustStore.CFN_RESOURCE_TYPE_NAME="AWS::WorkSpacesWeb::TrustStore";function CfnTrustStorePropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("certificateList",cdk().requiredValidator)(properties.certificateList)),errors.collect(cdk().propertyValidator("certificateList",cdk().listValidator(cdk().validateString))(properties.certificateList)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnTrustStoreProps"')}function convertCfnTrustStorePropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTrustStorePropsValidator(properties).assertSuccess(),{CertificateList:cdk().listMapper(cdk().stringToCloudFormation)(properties.certificateList),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnTrustStorePropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("certificateList","CertificateList",properties.CertificateList!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.CertificateList):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnUserAccessLoggingSettings extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnUserAccessLoggingSettingsPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnUserAccessLoggingSettings(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnUserAccessLoggingSettings.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_workspacesweb_CfnUserAccessLoggingSettingsProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnUserAccessLoggingSettings),error}cdk().requireProperty(props,"kinesisStreamArn",this),this.attrAssociatedPortalArns=cdk().Token.asList(this.getAtt("AssociatedPortalArns",cdk().ResolutionTypeHint.STRING_LIST)),this.attrUserAccessLoggingSettingsArn=cdk().Token.asString(this.getAtt("UserAccessLoggingSettingsArn",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::WorkSpacesWeb::UserAccessLoggingSettings",void 0,{tagPropertyName:"tags"}),this.kinesisStreamArn=props.kinesisStreamArn,this.tags=props.tags}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),kinesisStreamArn:this.kinesisStreamArn}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnUserAccessLoggingSettings.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnUserAccessLoggingSettingsPropsToCloudFormation(props)}}exports.CfnUserAccessLoggingSettings=CfnUserAccessLoggingSettings,_g=JSII_RTTI_SYMBOL_1,CfnUserAccessLoggingSettings[_g]={fqn:"aws-cdk-lib.aws_workspacesweb.CfnUserAccessLoggingSettings",version:"2.136.1"},CfnUserAccessLoggingSettings.CFN_RESOURCE_TYPE_NAME="AWS::WorkSpacesWeb::UserAccessLoggingSettings";function CfnUserAccessLoggingSettingsPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("kinesisStreamArn",cdk().requiredValidator)(properties.kinesisStreamArn)),errors.collect(cdk().propertyValidator("kinesisStreamArn",cdk().validateString)(properties.kinesisStreamArn)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnUserAccessLoggingSettingsProps"')}function convertCfnUserAccessLoggingSettingsPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnUserAccessLoggingSettingsPropsValidator(properties).assertSuccess(),{KinesisStreamArn:cdk().stringToCloudFormation(properties.kinesisStreamArn),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnUserAccessLoggingSettingsPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("kinesisStreamArn","KinesisStreamArn",properties.KinesisStreamArn!=null?cfn_parse().FromCloudFormation.getString(properties.KinesisStreamArn):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnUserSettings extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnUserSettingsPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnUserSettings(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnUserSettings.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_workspacesweb_CfnUserSettingsProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnUserSettings),error}cdk().requireProperty(props,"copyAllowed",this),cdk().requireProperty(props,"downloadAllowed",this),cdk().requireProperty(props,"pasteAllowed",this),cdk().requireProperty(props,"printAllowed",this),cdk().requireProperty(props,"uploadAllowed",this),this.attrAssociatedPortalArns=cdk().Token.asList(this.getAtt("AssociatedPortalArns",cdk().ResolutionTypeHint.STRING_LIST)),this.attrUserSettingsArn=cdk().Token.asString(this.getAtt("UserSettingsArn",cdk().ResolutionTypeHint.STRING)),this.additionalEncryptionContext=props.additionalEncryptionContext,this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::WorkSpacesWeb::UserSettings",void 0,{tagPropertyName:"tags"}),this.cookieSynchronizationConfiguration=props.cookieSynchronizationConfiguration,this.copyAllowed=props.copyAllowed,this.customerManagedKey=props.customerManagedKey,this.disconnectTimeoutInMinutes=props.disconnectTimeoutInMinutes,this.downloadAllowed=props.downloadAllowed,this.idleDisconnectTimeoutInMinutes=props.idleDisconnectTimeoutInMinutes,this.pasteAllowed=props.pasteAllowed,this.printAllowed=props.printAllowed,this.tags=props.tags,this.uploadAllowed=props.uploadAllowed}get cfnProperties(){return{additionalEncryptionContext:this.additionalEncryptionContext,tags:this.cdkTagManager.renderTags(this.tags),cookieSynchronizationConfiguration:this.cookieSynchronizationConfiguration,copyAllowed:this.copyAllowed,customerManagedKey:this.customerManagedKey,disconnectTimeoutInMinutes:this.disconnectTimeoutInMinutes,downloadAllowed:this.downloadAllowed,idleDisconnectTimeoutInMinutes:this.idleDisconnectTimeoutInMinutes,pasteAllowed:this.pasteAllowed,printAllowed:this.printAllowed,uploadAllowed:this.uploadAllowed}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnUserSettings.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnUserSettingsPropsToCloudFormation(props)}}exports.CfnUserSettings=CfnUserSettings,_h=JSII_RTTI_SYMBOL_1,CfnUserSettings[_h]={fqn:"aws-cdk-lib.aws_workspacesweb.CfnUserSettings",version:"2.136.1"},CfnUserSettings.CFN_RESOURCE_TYPE_NAME="AWS::WorkSpacesWeb::UserSettings";function CfnUserSettingsCookieSpecificationPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("domain",cdk().requiredValidator)(properties.domain)),errors.collect(cdk().propertyValidator("domain",cdk().validateString)(properties.domain)),errors.collect(cdk().propertyValidator("name",cdk().validateString)(properties.name)),errors.collect(cdk().propertyValidator("path",cdk().validateString)(properties.path)),errors.wrap('supplied properties not correct for "CookieSpecificationProperty"')}function convertCfnUserSettingsCookieSpecificationPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnUserSettingsCookieSpecificationPropertyValidator(properties).assertSuccess(),{Domain:cdk().stringToCloudFormation(properties.domain),Name:cdk().stringToCloudFormation(properties.name),Path:cdk().stringToCloudFormation(properties.path)}):properties}function CfnUserSettingsCookieSpecificationPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("domain","Domain",properties.Domain!=null?cfn_parse().FromCloudFormation.getString(properties.Domain):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse().FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("path","Path",properties.Path!=null?cfn_parse().FromCloudFormation.getString(properties.Path):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnUserSettingsCookieSynchronizationConfigurationPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("allowlist",cdk().requiredValidator)(properties.allowlist)),errors.collect(cdk().propertyValidator("allowlist",cdk().listValidator(CfnUserSettingsCookieSpecificationPropertyValidator))(properties.allowlist)),errors.collect(cdk().propertyValidator("blocklist",cdk().listValidator(CfnUserSettingsCookieSpecificationPropertyValidator))(properties.blocklist)),errors.wrap('supplied properties not correct for "CookieSynchronizationConfigurationProperty"')}function convertCfnUserSettingsCookieSynchronizationConfigurationPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnUserSettingsCookieSynchronizationConfigurationPropertyValidator(properties).assertSuccess(),{Allowlist:cdk().listMapper(convertCfnUserSettingsCookieSpecificationPropertyToCloudFormation)(properties.allowlist),Blocklist:cdk().listMapper(convertCfnUserSettingsCookieSpecificationPropertyToCloudFormation)(properties.blocklist)}):properties}function CfnUserSettingsCookieSynchronizationConfigurationPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("allowlist","Allowlist",properties.Allowlist!=null?cfn_parse().FromCloudFormation.getArray(CfnUserSettingsCookieSpecificationPropertyFromCloudFormation)(properties.Allowlist):void 0),ret.addPropertyResult("blocklist","Blocklist",properties.Blocklist!=null?cfn_parse().FromCloudFormation.getArray(CfnUserSettingsCookieSpecificationPropertyFromCloudFormation)(properties.Blocklist):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnUserSettingsPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("additionalEncryptionContext",cdk().hashValidator(cdk().validateString))(properties.additionalEncryptionContext)),errors.collect(cdk().propertyValidator("cookieSynchronizationConfiguration",CfnUserSettingsCookieSynchronizationConfigurationPropertyValidator)(properties.cookieSynchronizationConfiguration)),errors.collect(cdk().propertyValidator("copyAllowed",cdk().requiredValidator)(properties.copyAllowed)),errors.collect(cdk().propertyValidator("copyAllowed",cdk().validateString)(properties.copyAllowed)),errors.collect(cdk().propertyValidator("customerManagedKey",cdk().validateString)(properties.customerManagedKey)),errors.collect(cdk().propertyValidator("disconnectTimeoutInMinutes",cdk().validateNumber)(properties.disconnectTimeoutInMinutes)),errors.collect(cdk().propertyValidator("downloadAllowed",cdk().requiredValidator)(properties.downloadAllowed)),errors.collect(cdk().propertyValidator("downloadAllowed",cdk().validateString)(properties.downloadAllowed)),errors.collect(cdk().propertyValidator("idleDisconnectTimeoutInMinutes",cdk().validateNumber)(properties.idleDisconnectTimeoutInMinutes)),errors.collect(cdk().propertyValidator("pasteAllowed",cdk().requiredValidator)(properties.pasteAllowed)),errors.collect(cdk().propertyValidator("pasteAllowed",cdk().validateString)(properties.pasteAllowed)),errors.collect(cdk().propertyValidator("printAllowed",cdk().requiredValidator)(properties.printAllowed)),errors.collect(cdk().propertyValidator("printAllowed",cdk().validateString)(properties.printAllowed)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.collect(cdk().propertyValidator("uploadAllowed",cdk().requiredValidator)(properties.uploadAllowed)),errors.collect(cdk().propertyValidator("uploadAllowed",cdk().validateString)(properties.uploadAllowed)),errors.wrap('supplied properties not correct for "CfnUserSettingsProps"')}function convertCfnUserSettingsPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnUserSettingsPropsValidator(properties).assertSuccess(),{AdditionalEncryptionContext:cdk().hashMapper(cdk().stringToCloudFormation)(properties.additionalEncryptionContext),CookieSynchronizationConfiguration:convertCfnUserSettingsCookieSynchronizationConfigurationPropertyToCloudFormation(properties.cookieSynchronizationConfiguration),CopyAllowed:cdk().stringToCloudFormation(properties.copyAllowed),CustomerManagedKey:cdk().stringToCloudFormation(properties.customerManagedKey),DisconnectTimeoutInMinutes:cdk().numberToCloudFormation(properties.disconnectTimeoutInMinutes),DownloadAllowed:cdk().stringToCloudFormation(properties.downloadAllowed),IdleDisconnectTimeoutInMinutes:cdk().numberToCloudFormation(properties.idleDisconnectTimeoutInMinutes),PasteAllowed:cdk().stringToCloudFormation(properties.pasteAllowed),PrintAllowed:cdk().stringToCloudFormation(properties.printAllowed),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags),UploadAllowed:cdk().stringToCloudFormation(properties.uploadAllowed)}):properties}function CfnUserSettingsPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("additionalEncryptionContext","AdditionalEncryptionContext",properties.AdditionalEncryptionContext!=null?cfn_parse().FromCloudFormation.getMap(cfn_parse().FromCloudFormation.getString)(properties.AdditionalEncryptionContext):void 0),ret.addPropertyResult("cookieSynchronizationConfiguration","CookieSynchronizationConfiguration",properties.CookieSynchronizationConfiguration!=null?CfnUserSettingsCookieSynchronizationConfigurationPropertyFromCloudFormation(properties.CookieSynchronizationConfiguration):void 0),ret.addPropertyResult("copyAllowed","CopyAllowed",properties.CopyAllowed!=null?cfn_parse().FromCloudFormation.getString(properties.CopyAllowed):void 0),ret.addPropertyResult("customerManagedKey","CustomerManagedKey",properties.CustomerManagedKey!=null?cfn_parse().FromCloudFormation.getString(properties.CustomerManagedKey):void 0),ret.addPropertyResult("disconnectTimeoutInMinutes","DisconnectTimeoutInMinutes",properties.DisconnectTimeoutInMinutes!=null?cfn_parse().FromCloudFormation.getNumber(properties.DisconnectTimeoutInMinutes):void 0),ret.addPropertyResult("downloadAllowed","DownloadAllowed",properties.DownloadAllowed!=null?cfn_parse().FromCloudFormation.getString(properties.DownloadAllowed):void 0),ret.addPropertyResult("idleDisconnectTimeoutInMinutes","IdleDisconnectTimeoutInMinutes",properties.IdleDisconnectTimeoutInMinutes!=null?cfn_parse().FromCloudFormation.getNumber(properties.IdleDisconnectTimeoutInMinutes):void 0),ret.addPropertyResult("pasteAllowed","PasteAllowed",properties.PasteAllowed!=null?cfn_parse().FromCloudFormation.getString(properties.PasteAllowed):void 0),ret.addPropertyResult("printAllowed","PrintAllowed",properties.PrintAllowed!=null?cfn_parse().FromCloudFormation.getString(properties.PrintAllowed):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("uploadAllowed","UploadAllowed",properties.UploadAllowed!=null?cfn_parse().FromCloudFormation.getString(properties.UploadAllowed):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
