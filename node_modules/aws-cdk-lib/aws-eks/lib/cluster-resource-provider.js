"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClusterResourceProvider=void 0;var core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},cluster_resource_provider_generated_1=()=>{var tmp=require("../../custom-resource-handlers/dist/aws-eks/cluster-resource-provider.generated");return cluster_resource_provider_generated_1=()=>tmp,tmp},cr=()=>{var tmp=require("../../custom-resources");return cr=()=>tmp,tmp},lambda_layer_node_proxy_agent_1=()=>{var tmp=require("../../lambda-layer-node-proxy-agent");return lambda_layer_node_proxy_agent_1=()=>tmp,tmp};class ClusterResourceProvider extends core_1().NestedStack{static getOrCreate(scope,props){const stack=core_1().Stack.of(scope),uid="@aws-cdk/aws-eks.ClusterResourceProvider";return stack.node.tryFindChild(uid)??new ClusterResourceProvider(stack,uid,props)}constructor(scope,id,props){super(scope,id);const nodeProxyAgentLayer=new(lambda_layer_node_proxy_agent_1()).NodeProxyAgentLayer(this,"NodeProxyAgentLayer"),onEvent=new(cluster_resource_provider_generated_1()).ClusterResourceOnEventFunction(this,"OnEventHandler",{description:"onEvent handler for EKS cluster resource provider",environment:{AWS_STS_REGIONAL_ENDPOINTS:"regional",...props.environment},timeout:core_1().Duration.minutes(1),vpc:props.subnets?props.vpc:void 0,vpcSubnets:props.subnets?{subnets:props.subnets}:void 0,securityGroups:props.securityGroup?[props.securityGroup]:void 0,layers:props.onEventLayer?[props.onEventLayer]:[nodeProxyAgentLayer]}),isComplete=new(cluster_resource_provider_generated_1()).ClusterResourceIsCompleteFunction(this,"IsCompleteHandler",{description:"isComplete handler for EKS cluster resource provider",environment:{AWS_STS_REGIONAL_ENDPOINTS:"regional",...props.environment},timeout:core_1().Duration.minutes(1),vpc:props.subnets?props.vpc:void 0,vpcSubnets:props.subnets?{subnets:props.subnets}:void 0,securityGroups:props.securityGroup?[props.securityGroup]:void 0,layers:[nodeProxyAgentLayer]});this.provider=new(cr()).Provider(this,"Provider",{onEventHandler:onEvent,isCompleteHandler:isComplete,totalTimeout:core_1().Duration.hours(1),queryInterval:core_1().Duration.minutes(1),vpc:props.subnets?props.vpc:void 0,vpcSubnets:props.subnets?{subnets:props.subnets}:void 0,securityGroups:props.securityGroup?[props.securityGroup]:void 0})}get serviceToken(){return this.provider.serviceToken}}exports.ClusterResourceProvider=ClusterResourceProvider;
