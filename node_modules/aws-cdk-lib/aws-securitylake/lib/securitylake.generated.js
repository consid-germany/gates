"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnDataLake=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp};class CfnDataLake extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDataLakePropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDataLake(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnDataLake.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_securitylake_CfnDataLakeProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDataLake),error}this.attrArn=cdk().Token.asString(this.getAtt("Arn",cdk().ResolutionTypeHint.STRING)),this.attrS3BucketArn=cdk().Token.asString(this.getAtt("S3BucketArn",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::SecurityLake::DataLake",void 0,{tagPropertyName:"tags"}),this.encryptionConfiguration=props.encryptionConfiguration,this.lifecycleConfiguration=props.lifecycleConfiguration,this.metaStoreManagerRoleArn=props.metaStoreManagerRoleArn,this.replicationConfiguration=props.replicationConfiguration,this.tags=props.tags}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),encryptionConfiguration:this.encryptionConfiguration,lifecycleConfiguration:this.lifecycleConfiguration,metaStoreManagerRoleArn:this.metaStoreManagerRoleArn,replicationConfiguration:this.replicationConfiguration}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDataLake.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDataLakePropsToCloudFormation(props)}}exports.CfnDataLake=CfnDataLake,_a=JSII_RTTI_SYMBOL_1,CfnDataLake[_a]={fqn:"aws-cdk-lib.aws_securitylake.CfnDataLake",version:"2.136.1"},CfnDataLake.CFN_RESOURCE_TYPE_NAME="AWS::SecurityLake::DataLake";function CfnDataLakeEncryptionConfigurationPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("kmsKeyId",cdk().validateString)(properties.kmsKeyId)),errors.wrap('supplied properties not correct for "EncryptionConfigurationProperty"')}function convertCfnDataLakeEncryptionConfigurationPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDataLakeEncryptionConfigurationPropertyValidator(properties).assertSuccess(),{KmsKeyId:cdk().stringToCloudFormation(properties.kmsKeyId)}):properties}function CfnDataLakeEncryptionConfigurationPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse().FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDataLakeExpirationPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("days",cdk().validateNumber)(properties.days)),errors.wrap('supplied properties not correct for "ExpirationProperty"')}function convertCfnDataLakeExpirationPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDataLakeExpirationPropertyValidator(properties).assertSuccess(),{Days:cdk().numberToCloudFormation(properties.days)}):properties}function CfnDataLakeExpirationPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("days","Days",properties.Days!=null?cfn_parse().FromCloudFormation.getNumber(properties.Days):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDataLakeTransitionsPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("days",cdk().validateNumber)(properties.days)),errors.collect(cdk().propertyValidator("storageClass",cdk().validateString)(properties.storageClass)),errors.wrap('supplied properties not correct for "TransitionsProperty"')}function convertCfnDataLakeTransitionsPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDataLakeTransitionsPropertyValidator(properties).assertSuccess(),{Days:cdk().numberToCloudFormation(properties.days),StorageClass:cdk().stringToCloudFormation(properties.storageClass)}):properties}function CfnDataLakeTransitionsPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("days","Days",properties.Days!=null?cfn_parse().FromCloudFormation.getNumber(properties.Days):void 0),ret.addPropertyResult("storageClass","StorageClass",properties.StorageClass!=null?cfn_parse().FromCloudFormation.getString(properties.StorageClass):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDataLakeLifecycleConfigurationPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("expiration",CfnDataLakeExpirationPropertyValidator)(properties.expiration)),errors.collect(cdk().propertyValidator("transitions",cdk().listValidator(CfnDataLakeTransitionsPropertyValidator))(properties.transitions)),errors.wrap('supplied properties not correct for "LifecycleConfigurationProperty"')}function convertCfnDataLakeLifecycleConfigurationPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDataLakeLifecycleConfigurationPropertyValidator(properties).assertSuccess(),{Expiration:convertCfnDataLakeExpirationPropertyToCloudFormation(properties.expiration),Transitions:cdk().listMapper(convertCfnDataLakeTransitionsPropertyToCloudFormation)(properties.transitions)}):properties}function CfnDataLakeLifecycleConfigurationPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("expiration","Expiration",properties.Expiration!=null?CfnDataLakeExpirationPropertyFromCloudFormation(properties.Expiration):void 0),ret.addPropertyResult("transitions","Transitions",properties.Transitions!=null?cfn_parse().FromCloudFormation.getArray(CfnDataLakeTransitionsPropertyFromCloudFormation)(properties.Transitions):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDataLakeReplicationConfigurationPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("regions",cdk().listValidator(cdk().validateString))(properties.regions)),errors.collect(cdk().propertyValidator("roleArn",cdk().validateString)(properties.roleArn)),errors.wrap('supplied properties not correct for "ReplicationConfigurationProperty"')}function convertCfnDataLakeReplicationConfigurationPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDataLakeReplicationConfigurationPropertyValidator(properties).assertSuccess(),{Regions:cdk().listMapper(cdk().stringToCloudFormation)(properties.regions),RoleArn:cdk().stringToCloudFormation(properties.roleArn)}):properties}function CfnDataLakeReplicationConfigurationPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("regions","Regions",properties.Regions!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.Regions):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse().FromCloudFormation.getString(properties.RoleArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDataLakePropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("encryptionConfiguration",CfnDataLakeEncryptionConfigurationPropertyValidator)(properties.encryptionConfiguration)),errors.collect(cdk().propertyValidator("lifecycleConfiguration",CfnDataLakeLifecycleConfigurationPropertyValidator)(properties.lifecycleConfiguration)),errors.collect(cdk().propertyValidator("metaStoreManagerRoleArn",cdk().validateString)(properties.metaStoreManagerRoleArn)),errors.collect(cdk().propertyValidator("replicationConfiguration",CfnDataLakeReplicationConfigurationPropertyValidator)(properties.replicationConfiguration)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDataLakeProps"')}function convertCfnDataLakePropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDataLakePropsValidator(properties).assertSuccess(),{EncryptionConfiguration:convertCfnDataLakeEncryptionConfigurationPropertyToCloudFormation(properties.encryptionConfiguration),LifecycleConfiguration:convertCfnDataLakeLifecycleConfigurationPropertyToCloudFormation(properties.lifecycleConfiguration),MetaStoreManagerRoleArn:cdk().stringToCloudFormation(properties.metaStoreManagerRoleArn),ReplicationConfiguration:convertCfnDataLakeReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDataLakePropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("encryptionConfiguration","EncryptionConfiguration",properties.EncryptionConfiguration!=null?CfnDataLakeEncryptionConfigurationPropertyFromCloudFormation(properties.EncryptionConfiguration):void 0),ret.addPropertyResult("lifecycleConfiguration","LifecycleConfiguration",properties.LifecycleConfiguration!=null?CfnDataLakeLifecycleConfigurationPropertyFromCloudFormation(properties.LifecycleConfiguration):void 0),ret.addPropertyResult("metaStoreManagerRoleArn","MetaStoreManagerRoleArn",properties.MetaStoreManagerRoleArn!=null?cfn_parse().FromCloudFormation.getString(properties.MetaStoreManagerRoleArn):void 0),ret.addPropertyResult("replicationConfiguration","ReplicationConfiguration",properties.ReplicationConfiguration!=null?CfnDataLakeReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
