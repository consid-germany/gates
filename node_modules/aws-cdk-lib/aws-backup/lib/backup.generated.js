"use strict";var _a,_b,_c,_d,_e,_f,_g;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnRestoreTestingSelection=exports.CfnRestoreTestingPlan=exports.CfnReportPlan=exports.CfnFramework=exports.CfnBackupVault=exports.CfnBackupSelection=exports.CfnBackupPlan=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp};class CfnBackupPlan extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnBackupPlanPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnBackupPlan(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnBackupPlan.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_backup_CfnBackupPlanProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnBackupPlan),error}cdk().requireProperty(props,"backupPlan",this),this.attrBackupPlanArn=cdk().Token.asString(this.getAtt("BackupPlanArn",cdk().ResolutionTypeHint.STRING)),this.attrBackupPlanId=cdk().Token.asString(this.getAtt("BackupPlanId",cdk().ResolutionTypeHint.STRING)),this.attrVersionId=cdk().Token.asString(this.getAtt("VersionId",cdk().ResolutionTypeHint.STRING)),this.backupPlan=props.backupPlan,this.backupPlanTags=props.backupPlanTags,this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.MAP,"AWS::Backup::BackupPlan",void 0,{tagPropertyName:"backupPlanTags"})}get cfnProperties(){return{backupPlan:this.backupPlan,backupPlanTags:this.cdkTagManager.renderTags(this.backupPlanTags)}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnBackupPlan.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnBackupPlanPropsToCloudFormation(props)}}exports.CfnBackupPlan=CfnBackupPlan,_a=JSII_RTTI_SYMBOL_1,CfnBackupPlan[_a]={fqn:"aws-cdk-lib.aws_backup.CfnBackupPlan",version:"2.136.1"},CfnBackupPlan.CFN_RESOURCE_TYPE_NAME="AWS::Backup::BackupPlan";function CfnBackupPlanAdvancedBackupSettingResourceTypePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("backupOptions",cdk().requiredValidator)(properties.backupOptions)),errors.collect(cdk().propertyValidator("backupOptions",cdk().validateObject)(properties.backupOptions)),errors.collect(cdk().propertyValidator("resourceType",cdk().requiredValidator)(properties.resourceType)),errors.collect(cdk().propertyValidator("resourceType",cdk().validateString)(properties.resourceType)),errors.wrap('supplied properties not correct for "AdvancedBackupSettingResourceTypeProperty"')}function convertCfnBackupPlanAdvancedBackupSettingResourceTypePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupPlanAdvancedBackupSettingResourceTypePropertyValidator(properties).assertSuccess(),{BackupOptions:cdk().objectToCloudFormation(properties.backupOptions),ResourceType:cdk().stringToCloudFormation(properties.resourceType)}):properties}function CfnBackupPlanAdvancedBackupSettingResourceTypePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("backupOptions","BackupOptions",properties.BackupOptions!=null?cfn_parse().FromCloudFormation.getAny(properties.BackupOptions):void 0),ret.addPropertyResult("resourceType","ResourceType",properties.ResourceType!=null?cfn_parse().FromCloudFormation.getString(properties.ResourceType):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupPlanLifecycleResourceTypePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("deleteAfterDays",cdk().validateNumber)(properties.deleteAfterDays)),errors.collect(cdk().propertyValidator("moveToColdStorageAfterDays",cdk().validateNumber)(properties.moveToColdStorageAfterDays)),errors.collect(cdk().propertyValidator("optInToArchiveForSupportedResources",cdk().validateBoolean)(properties.optInToArchiveForSupportedResources)),errors.wrap('supplied properties not correct for "LifecycleResourceTypeProperty"')}function convertCfnBackupPlanLifecycleResourceTypePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupPlanLifecycleResourceTypePropertyValidator(properties).assertSuccess(),{DeleteAfterDays:cdk().numberToCloudFormation(properties.deleteAfterDays),MoveToColdStorageAfterDays:cdk().numberToCloudFormation(properties.moveToColdStorageAfterDays),OptInToArchiveForSupportedResources:cdk().booleanToCloudFormation(properties.optInToArchiveForSupportedResources)}):properties}function CfnBackupPlanLifecycleResourceTypePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("deleteAfterDays","DeleteAfterDays",properties.DeleteAfterDays!=null?cfn_parse().FromCloudFormation.getNumber(properties.DeleteAfterDays):void 0),ret.addPropertyResult("moveToColdStorageAfterDays","MoveToColdStorageAfterDays",properties.MoveToColdStorageAfterDays!=null?cfn_parse().FromCloudFormation.getNumber(properties.MoveToColdStorageAfterDays):void 0),ret.addPropertyResult("optInToArchiveForSupportedResources","OptInToArchiveForSupportedResources",properties.OptInToArchiveForSupportedResources!=null?cfn_parse().FromCloudFormation.getBoolean(properties.OptInToArchiveForSupportedResources):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupPlanCopyActionResourceTypePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("destinationBackupVaultArn",cdk().requiredValidator)(properties.destinationBackupVaultArn)),errors.collect(cdk().propertyValidator("destinationBackupVaultArn",cdk().validateString)(properties.destinationBackupVaultArn)),errors.collect(cdk().propertyValidator("lifecycle",CfnBackupPlanLifecycleResourceTypePropertyValidator)(properties.lifecycle)),errors.wrap('supplied properties not correct for "CopyActionResourceTypeProperty"')}function convertCfnBackupPlanCopyActionResourceTypePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupPlanCopyActionResourceTypePropertyValidator(properties).assertSuccess(),{DestinationBackupVaultArn:cdk().stringToCloudFormation(properties.destinationBackupVaultArn),Lifecycle:convertCfnBackupPlanLifecycleResourceTypePropertyToCloudFormation(properties.lifecycle)}):properties}function CfnBackupPlanCopyActionResourceTypePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("destinationBackupVaultArn","DestinationBackupVaultArn",properties.DestinationBackupVaultArn!=null?cfn_parse().FromCloudFormation.getString(properties.DestinationBackupVaultArn):void 0),ret.addPropertyResult("lifecycle","Lifecycle",properties.Lifecycle!=null?CfnBackupPlanLifecycleResourceTypePropertyFromCloudFormation(properties.Lifecycle):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupPlanBackupRuleResourceTypePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("completionWindowMinutes",cdk().validateNumber)(properties.completionWindowMinutes)),errors.collect(cdk().propertyValidator("copyActions",cdk().listValidator(CfnBackupPlanCopyActionResourceTypePropertyValidator))(properties.copyActions)),errors.collect(cdk().propertyValidator("enableContinuousBackup",cdk().validateBoolean)(properties.enableContinuousBackup)),errors.collect(cdk().propertyValidator("lifecycle",CfnBackupPlanLifecycleResourceTypePropertyValidator)(properties.lifecycle)),errors.collect(cdk().propertyValidator("recoveryPointTags",cdk().hashValidator(cdk().validateString))(properties.recoveryPointTags)),errors.collect(cdk().propertyValidator("ruleName",cdk().requiredValidator)(properties.ruleName)),errors.collect(cdk().propertyValidator("ruleName",cdk().validateString)(properties.ruleName)),errors.collect(cdk().propertyValidator("scheduleExpression",cdk().validateString)(properties.scheduleExpression)),errors.collect(cdk().propertyValidator("scheduleExpressionTimezone",cdk().validateString)(properties.scheduleExpressionTimezone)),errors.collect(cdk().propertyValidator("startWindowMinutes",cdk().validateNumber)(properties.startWindowMinutes)),errors.collect(cdk().propertyValidator("targetBackupVault",cdk().requiredValidator)(properties.targetBackupVault)),errors.collect(cdk().propertyValidator("targetBackupVault",cdk().validateString)(properties.targetBackupVault)),errors.wrap('supplied properties not correct for "BackupRuleResourceTypeProperty"')}function convertCfnBackupPlanBackupRuleResourceTypePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupPlanBackupRuleResourceTypePropertyValidator(properties).assertSuccess(),{CompletionWindowMinutes:cdk().numberToCloudFormation(properties.completionWindowMinutes),CopyActions:cdk().listMapper(convertCfnBackupPlanCopyActionResourceTypePropertyToCloudFormation)(properties.copyActions),EnableContinuousBackup:cdk().booleanToCloudFormation(properties.enableContinuousBackup),Lifecycle:convertCfnBackupPlanLifecycleResourceTypePropertyToCloudFormation(properties.lifecycle),RecoveryPointTags:cdk().hashMapper(cdk().stringToCloudFormation)(properties.recoveryPointTags),RuleName:cdk().stringToCloudFormation(properties.ruleName),ScheduleExpression:cdk().stringToCloudFormation(properties.scheduleExpression),ScheduleExpressionTimezone:cdk().stringToCloudFormation(properties.scheduleExpressionTimezone),StartWindowMinutes:cdk().numberToCloudFormation(properties.startWindowMinutes),TargetBackupVault:cdk().stringToCloudFormation(properties.targetBackupVault)}):properties}function CfnBackupPlanBackupRuleResourceTypePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("completionWindowMinutes","CompletionWindowMinutes",properties.CompletionWindowMinutes!=null?cfn_parse().FromCloudFormation.getNumber(properties.CompletionWindowMinutes):void 0),ret.addPropertyResult("copyActions","CopyActions",properties.CopyActions!=null?cfn_parse().FromCloudFormation.getArray(CfnBackupPlanCopyActionResourceTypePropertyFromCloudFormation)(properties.CopyActions):void 0),ret.addPropertyResult("enableContinuousBackup","EnableContinuousBackup",properties.EnableContinuousBackup!=null?cfn_parse().FromCloudFormation.getBoolean(properties.EnableContinuousBackup):void 0),ret.addPropertyResult("lifecycle","Lifecycle",properties.Lifecycle!=null?CfnBackupPlanLifecycleResourceTypePropertyFromCloudFormation(properties.Lifecycle):void 0),ret.addPropertyResult("recoveryPointTags","RecoveryPointTags",properties.RecoveryPointTags!=null?cfn_parse().FromCloudFormation.getMap(cfn_parse().FromCloudFormation.getString)(properties.RecoveryPointTags):void 0),ret.addPropertyResult("ruleName","RuleName",properties.RuleName!=null?cfn_parse().FromCloudFormation.getString(properties.RuleName):void 0),ret.addPropertyResult("scheduleExpression","ScheduleExpression",properties.ScheduleExpression!=null?cfn_parse().FromCloudFormation.getString(properties.ScheduleExpression):void 0),ret.addPropertyResult("scheduleExpressionTimezone","ScheduleExpressionTimezone",properties.ScheduleExpressionTimezone!=null?cfn_parse().FromCloudFormation.getString(properties.ScheduleExpressionTimezone):void 0),ret.addPropertyResult("startWindowMinutes","StartWindowMinutes",properties.StartWindowMinutes!=null?cfn_parse().FromCloudFormation.getNumber(properties.StartWindowMinutes):void 0),ret.addPropertyResult("targetBackupVault","TargetBackupVault",properties.TargetBackupVault!=null?cfn_parse().FromCloudFormation.getString(properties.TargetBackupVault):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupPlanBackupPlanResourceTypePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("advancedBackupSettings",cdk().listValidator(CfnBackupPlanAdvancedBackupSettingResourceTypePropertyValidator))(properties.advancedBackupSettings)),errors.collect(cdk().propertyValidator("backupPlanName",cdk().requiredValidator)(properties.backupPlanName)),errors.collect(cdk().propertyValidator("backupPlanName",cdk().validateString)(properties.backupPlanName)),errors.collect(cdk().propertyValidator("backupPlanRule",cdk().requiredValidator)(properties.backupPlanRule)),errors.collect(cdk().propertyValidator("backupPlanRule",cdk().listValidator(CfnBackupPlanBackupRuleResourceTypePropertyValidator))(properties.backupPlanRule)),errors.wrap('supplied properties not correct for "BackupPlanResourceTypeProperty"')}function convertCfnBackupPlanBackupPlanResourceTypePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupPlanBackupPlanResourceTypePropertyValidator(properties).assertSuccess(),{AdvancedBackupSettings:cdk().listMapper(convertCfnBackupPlanAdvancedBackupSettingResourceTypePropertyToCloudFormation)(properties.advancedBackupSettings),BackupPlanName:cdk().stringToCloudFormation(properties.backupPlanName),BackupPlanRule:cdk().listMapper(convertCfnBackupPlanBackupRuleResourceTypePropertyToCloudFormation)(properties.backupPlanRule)}):properties}function CfnBackupPlanBackupPlanResourceTypePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("advancedBackupSettings","AdvancedBackupSettings",properties.AdvancedBackupSettings!=null?cfn_parse().FromCloudFormation.getArray(CfnBackupPlanAdvancedBackupSettingResourceTypePropertyFromCloudFormation)(properties.AdvancedBackupSettings):void 0),ret.addPropertyResult("backupPlanName","BackupPlanName",properties.BackupPlanName!=null?cfn_parse().FromCloudFormation.getString(properties.BackupPlanName):void 0),ret.addPropertyResult("backupPlanRule","BackupPlanRule",properties.BackupPlanRule!=null?cfn_parse().FromCloudFormation.getArray(CfnBackupPlanBackupRuleResourceTypePropertyFromCloudFormation)(properties.BackupPlanRule):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupPlanPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("backupPlan",cdk().requiredValidator)(properties.backupPlan)),errors.collect(cdk().propertyValidator("backupPlan",CfnBackupPlanBackupPlanResourceTypePropertyValidator)(properties.backupPlan)),errors.collect(cdk().propertyValidator("backupPlanTags",cdk().hashValidator(cdk().validateString))(properties.backupPlanTags)),errors.wrap('supplied properties not correct for "CfnBackupPlanProps"')}function convertCfnBackupPlanPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupPlanPropsValidator(properties).assertSuccess(),{BackupPlan:convertCfnBackupPlanBackupPlanResourceTypePropertyToCloudFormation(properties.backupPlan),BackupPlanTags:cdk().hashMapper(cdk().stringToCloudFormation)(properties.backupPlanTags)}):properties}function CfnBackupPlanPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("backupPlan","BackupPlan",properties.BackupPlan!=null?CfnBackupPlanBackupPlanResourceTypePropertyFromCloudFormation(properties.BackupPlan):void 0),ret.addPropertyResult("backupPlanTags","BackupPlanTags",properties.BackupPlanTags!=null?cfn_parse().FromCloudFormation.getMap(cfn_parse().FromCloudFormation.getString)(properties.BackupPlanTags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnBackupSelection extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnBackupSelectionPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnBackupSelection(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnBackupSelection.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_backup_CfnBackupSelectionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnBackupSelection),error}cdk().requireProperty(props,"backupPlanId",this),cdk().requireProperty(props,"backupSelection",this),this.attrBackupPlanId=cdk().Token.asString(this.getAtt("BackupPlanId",cdk().ResolutionTypeHint.STRING)),this.attrId=cdk().Token.asString(this.getAtt("Id",cdk().ResolutionTypeHint.STRING)),this.attrSelectionId=cdk().Token.asString(this.getAtt("SelectionId",cdk().ResolutionTypeHint.STRING)),this.backupPlanId=props.backupPlanId,this.backupSelection=props.backupSelection}get cfnProperties(){return{backupPlanId:this.backupPlanId,backupSelection:this.backupSelection}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnBackupSelection.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnBackupSelectionPropsToCloudFormation(props)}}exports.CfnBackupSelection=CfnBackupSelection,_b=JSII_RTTI_SYMBOL_1,CfnBackupSelection[_b]={fqn:"aws-cdk-lib.aws_backup.CfnBackupSelection",version:"2.136.1"},CfnBackupSelection.CFN_RESOURCE_TYPE_NAME="AWS::Backup::BackupSelection";function CfnBackupSelectionConditionResourceTypePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("conditionKey",cdk().requiredValidator)(properties.conditionKey)),errors.collect(cdk().propertyValidator("conditionKey",cdk().validateString)(properties.conditionKey)),errors.collect(cdk().propertyValidator("conditionType",cdk().requiredValidator)(properties.conditionType)),errors.collect(cdk().propertyValidator("conditionType",cdk().validateString)(properties.conditionType)),errors.collect(cdk().propertyValidator("conditionValue",cdk().requiredValidator)(properties.conditionValue)),errors.collect(cdk().propertyValidator("conditionValue",cdk().validateString)(properties.conditionValue)),errors.wrap('supplied properties not correct for "ConditionResourceTypeProperty"')}function convertCfnBackupSelectionConditionResourceTypePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupSelectionConditionResourceTypePropertyValidator(properties).assertSuccess(),{ConditionKey:cdk().stringToCloudFormation(properties.conditionKey),ConditionType:cdk().stringToCloudFormation(properties.conditionType),ConditionValue:cdk().stringToCloudFormation(properties.conditionValue)}):properties}function CfnBackupSelectionConditionResourceTypePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("conditionKey","ConditionKey",properties.ConditionKey!=null?cfn_parse().FromCloudFormation.getString(properties.ConditionKey):void 0),ret.addPropertyResult("conditionType","ConditionType",properties.ConditionType!=null?cfn_parse().FromCloudFormation.getString(properties.ConditionType):void 0),ret.addPropertyResult("conditionValue","ConditionValue",properties.ConditionValue!=null?cfn_parse().FromCloudFormation.getString(properties.ConditionValue):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupSelectionBackupSelectionResourceTypePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("conditions",cdk().validateObject)(properties.conditions)),errors.collect(cdk().propertyValidator("iamRoleArn",cdk().requiredValidator)(properties.iamRoleArn)),errors.collect(cdk().propertyValidator("iamRoleArn",cdk().validateString)(properties.iamRoleArn)),errors.collect(cdk().propertyValidator("listOfTags",cdk().listValidator(CfnBackupSelectionConditionResourceTypePropertyValidator))(properties.listOfTags)),errors.collect(cdk().propertyValidator("notResources",cdk().listValidator(cdk().validateString))(properties.notResources)),errors.collect(cdk().propertyValidator("resources",cdk().listValidator(cdk().validateString))(properties.resources)),errors.collect(cdk().propertyValidator("selectionName",cdk().requiredValidator)(properties.selectionName)),errors.collect(cdk().propertyValidator("selectionName",cdk().validateString)(properties.selectionName)),errors.wrap('supplied properties not correct for "BackupSelectionResourceTypeProperty"')}function convertCfnBackupSelectionBackupSelectionResourceTypePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupSelectionBackupSelectionResourceTypePropertyValidator(properties).assertSuccess(),{Conditions:cdk().objectToCloudFormation(properties.conditions),IamRoleArn:cdk().stringToCloudFormation(properties.iamRoleArn),ListOfTags:cdk().listMapper(convertCfnBackupSelectionConditionResourceTypePropertyToCloudFormation)(properties.listOfTags),NotResources:cdk().listMapper(cdk().stringToCloudFormation)(properties.notResources),Resources:cdk().listMapper(cdk().stringToCloudFormation)(properties.resources),SelectionName:cdk().stringToCloudFormation(properties.selectionName)}):properties}function CfnBackupSelectionBackupSelectionResourceTypePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("conditions","Conditions",properties.Conditions!=null?cfn_parse().FromCloudFormation.getAny(properties.Conditions):void 0),ret.addPropertyResult("iamRoleArn","IamRoleArn",properties.IamRoleArn!=null?cfn_parse().FromCloudFormation.getString(properties.IamRoleArn):void 0),ret.addPropertyResult("listOfTags","ListOfTags",properties.ListOfTags!=null?cfn_parse().FromCloudFormation.getArray(CfnBackupSelectionConditionResourceTypePropertyFromCloudFormation)(properties.ListOfTags):void 0),ret.addPropertyResult("notResources","NotResources",properties.NotResources!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.NotResources):void 0),ret.addPropertyResult("resources","Resources",properties.Resources!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.Resources):void 0),ret.addPropertyResult("selectionName","SelectionName",properties.SelectionName!=null?cfn_parse().FromCloudFormation.getString(properties.SelectionName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupSelectionPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("backupPlanId",cdk().requiredValidator)(properties.backupPlanId)),errors.collect(cdk().propertyValidator("backupPlanId",cdk().validateString)(properties.backupPlanId)),errors.collect(cdk().propertyValidator("backupSelection",cdk().requiredValidator)(properties.backupSelection)),errors.collect(cdk().propertyValidator("backupSelection",CfnBackupSelectionBackupSelectionResourceTypePropertyValidator)(properties.backupSelection)),errors.wrap('supplied properties not correct for "CfnBackupSelectionProps"')}function convertCfnBackupSelectionPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupSelectionPropsValidator(properties).assertSuccess(),{BackupPlanId:cdk().stringToCloudFormation(properties.backupPlanId),BackupSelection:convertCfnBackupSelectionBackupSelectionResourceTypePropertyToCloudFormation(properties.backupSelection)}):properties}function CfnBackupSelectionPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("backupPlanId","BackupPlanId",properties.BackupPlanId!=null?cfn_parse().FromCloudFormation.getString(properties.BackupPlanId):void 0),ret.addPropertyResult("backupSelection","BackupSelection",properties.BackupSelection!=null?CfnBackupSelectionBackupSelectionResourceTypePropertyFromCloudFormation(properties.BackupSelection):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupSelectionConditionParameterPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("conditionKey",cdk().validateString)(properties.conditionKey)),errors.collect(cdk().propertyValidator("conditionValue",cdk().validateString)(properties.conditionValue)),errors.wrap('supplied properties not correct for "ConditionParameterProperty"')}function convertCfnBackupSelectionConditionParameterPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupSelectionConditionParameterPropertyValidator(properties).assertSuccess(),{ConditionKey:cdk().stringToCloudFormation(properties.conditionKey),ConditionValue:cdk().stringToCloudFormation(properties.conditionValue)}):properties}function CfnBackupSelectionConditionParameterPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("conditionKey","ConditionKey",properties.ConditionKey!=null?cfn_parse().FromCloudFormation.getString(properties.ConditionKey):void 0),ret.addPropertyResult("conditionValue","ConditionValue",properties.ConditionValue!=null?cfn_parse().FromCloudFormation.getString(properties.ConditionValue):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupSelectionConditionsPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("stringEquals",cdk().listValidator(CfnBackupSelectionConditionParameterPropertyValidator))(properties.stringEquals)),errors.collect(cdk().propertyValidator("stringLike",cdk().listValidator(CfnBackupSelectionConditionParameterPropertyValidator))(properties.stringLike)),errors.collect(cdk().propertyValidator("stringNotEquals",cdk().listValidator(CfnBackupSelectionConditionParameterPropertyValidator))(properties.stringNotEquals)),errors.collect(cdk().propertyValidator("stringNotLike",cdk().listValidator(CfnBackupSelectionConditionParameterPropertyValidator))(properties.stringNotLike)),errors.wrap('supplied properties not correct for "ConditionsProperty"')}function convertCfnBackupSelectionConditionsPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupSelectionConditionsPropertyValidator(properties).assertSuccess(),{StringEquals:cdk().listMapper(convertCfnBackupSelectionConditionParameterPropertyToCloudFormation)(properties.stringEquals),StringLike:cdk().listMapper(convertCfnBackupSelectionConditionParameterPropertyToCloudFormation)(properties.stringLike),StringNotEquals:cdk().listMapper(convertCfnBackupSelectionConditionParameterPropertyToCloudFormation)(properties.stringNotEquals),StringNotLike:cdk().listMapper(convertCfnBackupSelectionConditionParameterPropertyToCloudFormation)(properties.stringNotLike)}):properties}function CfnBackupSelectionConditionsPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("stringEquals","StringEquals",properties.StringEquals!=null?cfn_parse().FromCloudFormation.getArray(CfnBackupSelectionConditionParameterPropertyFromCloudFormation)(properties.StringEquals):void 0),ret.addPropertyResult("stringLike","StringLike",properties.StringLike!=null?cfn_parse().FromCloudFormation.getArray(CfnBackupSelectionConditionParameterPropertyFromCloudFormation)(properties.StringLike):void 0),ret.addPropertyResult("stringNotEquals","StringNotEquals",properties.StringNotEquals!=null?cfn_parse().FromCloudFormation.getArray(CfnBackupSelectionConditionParameterPropertyFromCloudFormation)(properties.StringNotEquals):void 0),ret.addPropertyResult("stringNotLike","StringNotLike",properties.StringNotLike!=null?cfn_parse().FromCloudFormation.getArray(CfnBackupSelectionConditionParameterPropertyFromCloudFormation)(properties.StringNotLike):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnBackupVault extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnBackupVaultPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnBackupVault(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnBackupVault.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_backup_CfnBackupVaultProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnBackupVault),error}cdk().requireProperty(props,"backupVaultName",this),this.attrBackupVaultArn=cdk().Token.asString(this.getAtt("BackupVaultArn",cdk().ResolutionTypeHint.STRING)),this.attrBackupVaultName=cdk().Token.asString(this.getAtt("BackupVaultName",cdk().ResolutionTypeHint.STRING)),this.accessPolicy=props.accessPolicy,this.backupVaultName=props.backupVaultName,this.backupVaultTags=props.backupVaultTags,this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.MAP,"AWS::Backup::BackupVault",void 0,{tagPropertyName:"backupVaultTags"}),this.encryptionKeyArn=props.encryptionKeyArn,this.lockConfiguration=props.lockConfiguration,this.notifications=props.notifications,this.node.scope!=null&&cdk().Resource.isResource(this.node.scope)&&this.node.addValidation({validate:()=>this.cfnOptions.deletionPolicy===void 0?["'AWS::Backup::BackupVault' is a stateful resource type, and you must specify a Removal Policy for it. Call 'resource.applyRemovalPolicy()'."]:[]})}get cfnProperties(){return{accessPolicy:this.accessPolicy,backupVaultName:this.backupVaultName,backupVaultTags:this.cdkTagManager.renderTags(this.backupVaultTags),encryptionKeyArn:this.encryptionKeyArn,lockConfiguration:this.lockConfiguration,notifications:this.notifications}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnBackupVault.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnBackupVaultPropsToCloudFormation(props)}}exports.CfnBackupVault=CfnBackupVault,_c=JSII_RTTI_SYMBOL_1,CfnBackupVault[_c]={fqn:"aws-cdk-lib.aws_backup.CfnBackupVault",version:"2.136.1"},CfnBackupVault.CFN_RESOURCE_TYPE_NAME="AWS::Backup::BackupVault";function CfnBackupVaultLockConfigurationTypePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("changeableForDays",cdk().validateNumber)(properties.changeableForDays)),errors.collect(cdk().propertyValidator("maxRetentionDays",cdk().validateNumber)(properties.maxRetentionDays)),errors.collect(cdk().propertyValidator("minRetentionDays",cdk().requiredValidator)(properties.minRetentionDays)),errors.collect(cdk().propertyValidator("minRetentionDays",cdk().validateNumber)(properties.minRetentionDays)),errors.wrap('supplied properties not correct for "LockConfigurationTypeProperty"')}function convertCfnBackupVaultLockConfigurationTypePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupVaultLockConfigurationTypePropertyValidator(properties).assertSuccess(),{ChangeableForDays:cdk().numberToCloudFormation(properties.changeableForDays),MaxRetentionDays:cdk().numberToCloudFormation(properties.maxRetentionDays),MinRetentionDays:cdk().numberToCloudFormation(properties.minRetentionDays)}):properties}function CfnBackupVaultLockConfigurationTypePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("changeableForDays","ChangeableForDays",properties.ChangeableForDays!=null?cfn_parse().FromCloudFormation.getNumber(properties.ChangeableForDays):void 0),ret.addPropertyResult("maxRetentionDays","MaxRetentionDays",properties.MaxRetentionDays!=null?cfn_parse().FromCloudFormation.getNumber(properties.MaxRetentionDays):void 0),ret.addPropertyResult("minRetentionDays","MinRetentionDays",properties.MinRetentionDays!=null?cfn_parse().FromCloudFormation.getNumber(properties.MinRetentionDays):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupVaultNotificationObjectTypePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("backupVaultEvents",cdk().requiredValidator)(properties.backupVaultEvents)),errors.collect(cdk().propertyValidator("backupVaultEvents",cdk().listValidator(cdk().validateString))(properties.backupVaultEvents)),errors.collect(cdk().propertyValidator("snsTopicArn",cdk().requiredValidator)(properties.snsTopicArn)),errors.collect(cdk().propertyValidator("snsTopicArn",cdk().validateString)(properties.snsTopicArn)),errors.wrap('supplied properties not correct for "NotificationObjectTypeProperty"')}function convertCfnBackupVaultNotificationObjectTypePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupVaultNotificationObjectTypePropertyValidator(properties).assertSuccess(),{BackupVaultEvents:cdk().listMapper(cdk().stringToCloudFormation)(properties.backupVaultEvents),SNSTopicArn:cdk().stringToCloudFormation(properties.snsTopicArn)}):properties}function CfnBackupVaultNotificationObjectTypePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("backupVaultEvents","BackupVaultEvents",properties.BackupVaultEvents!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.BackupVaultEvents):void 0),ret.addPropertyResult("snsTopicArn","SNSTopicArn",properties.SNSTopicArn!=null?cfn_parse().FromCloudFormation.getString(properties.SNSTopicArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBackupVaultPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("accessPolicy",cdk().validateObject)(properties.accessPolicy)),errors.collect(cdk().propertyValidator("backupVaultName",cdk().requiredValidator)(properties.backupVaultName)),errors.collect(cdk().propertyValidator("backupVaultName",cdk().validateString)(properties.backupVaultName)),errors.collect(cdk().propertyValidator("backupVaultTags",cdk().hashValidator(cdk().validateString))(properties.backupVaultTags)),errors.collect(cdk().propertyValidator("encryptionKeyArn",cdk().validateString)(properties.encryptionKeyArn)),errors.collect(cdk().propertyValidator("lockConfiguration",CfnBackupVaultLockConfigurationTypePropertyValidator)(properties.lockConfiguration)),errors.collect(cdk().propertyValidator("notifications",CfnBackupVaultNotificationObjectTypePropertyValidator)(properties.notifications)),errors.wrap('supplied properties not correct for "CfnBackupVaultProps"')}function convertCfnBackupVaultPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnBackupVaultPropsValidator(properties).assertSuccess(),{AccessPolicy:cdk().objectToCloudFormation(properties.accessPolicy),BackupVaultName:cdk().stringToCloudFormation(properties.backupVaultName),BackupVaultTags:cdk().hashMapper(cdk().stringToCloudFormation)(properties.backupVaultTags),EncryptionKeyArn:cdk().stringToCloudFormation(properties.encryptionKeyArn),LockConfiguration:convertCfnBackupVaultLockConfigurationTypePropertyToCloudFormation(properties.lockConfiguration),Notifications:convertCfnBackupVaultNotificationObjectTypePropertyToCloudFormation(properties.notifications)}):properties}function CfnBackupVaultPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("accessPolicy","AccessPolicy",properties.AccessPolicy!=null?cfn_parse().FromCloudFormation.getAny(properties.AccessPolicy):void 0),ret.addPropertyResult("backupVaultName","BackupVaultName",properties.BackupVaultName!=null?cfn_parse().FromCloudFormation.getString(properties.BackupVaultName):void 0),ret.addPropertyResult("backupVaultTags","BackupVaultTags",properties.BackupVaultTags!=null?cfn_parse().FromCloudFormation.getMap(cfn_parse().FromCloudFormation.getString)(properties.BackupVaultTags):void 0),ret.addPropertyResult("encryptionKeyArn","EncryptionKeyArn",properties.EncryptionKeyArn!=null?cfn_parse().FromCloudFormation.getString(properties.EncryptionKeyArn):void 0),ret.addPropertyResult("lockConfiguration","LockConfiguration",properties.LockConfiguration!=null?CfnBackupVaultLockConfigurationTypePropertyFromCloudFormation(properties.LockConfiguration):void 0),ret.addPropertyResult("notifications","Notifications",properties.Notifications!=null?CfnBackupVaultNotificationObjectTypePropertyFromCloudFormation(properties.Notifications):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFramework extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFrameworkPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnFramework(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnFramework.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_backup_CfnFrameworkProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnFramework),error}cdk().requireProperty(props,"frameworkControls",this),this.attrCreationTime=cdk().Token.asString(this.getAtt("CreationTime",cdk().ResolutionTypeHint.STRING)),this.attrDeploymentStatus=cdk().Token.asString(this.getAtt("DeploymentStatus",cdk().ResolutionTypeHint.STRING)),this.attrFrameworkArn=cdk().Token.asString(this.getAtt("FrameworkArn",cdk().ResolutionTypeHint.STRING)),this.attrFrameworkStatus=cdk().Token.asString(this.getAtt("FrameworkStatus",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::Backup::Framework",void 0,{tagPropertyName:"frameworkTags"}),this.frameworkControls=props.frameworkControls,this.frameworkDescription=props.frameworkDescription,this.frameworkName=props.frameworkName,this.frameworkTags=props.frameworkTags}get cfnProperties(){return{frameworkTags:this.cdkTagManager.renderTags(this.frameworkTags),frameworkControls:this.frameworkControls,frameworkDescription:this.frameworkDescription,frameworkName:this.frameworkName}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnFramework.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnFrameworkPropsToCloudFormation(props)}}exports.CfnFramework=CfnFramework,_d=JSII_RTTI_SYMBOL_1,CfnFramework[_d]={fqn:"aws-cdk-lib.aws_backup.CfnFramework",version:"2.136.1"},CfnFramework.CFN_RESOURCE_TYPE_NAME="AWS::Backup::Framework";function CfnFrameworkControlInputParameterPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("parameterName",cdk().requiredValidator)(properties.parameterName)),errors.collect(cdk().propertyValidator("parameterName",cdk().validateString)(properties.parameterName)),errors.collect(cdk().propertyValidator("parameterValue",cdk().requiredValidator)(properties.parameterValue)),errors.collect(cdk().propertyValidator("parameterValue",cdk().validateString)(properties.parameterValue)),errors.wrap('supplied properties not correct for "ControlInputParameterProperty"')}function convertCfnFrameworkControlInputParameterPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnFrameworkControlInputParameterPropertyValidator(properties).assertSuccess(),{ParameterName:cdk().stringToCloudFormation(properties.parameterName),ParameterValue:cdk().stringToCloudFormation(properties.parameterValue)}):properties}function CfnFrameworkControlInputParameterPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("parameterName","ParameterName",properties.ParameterName!=null?cfn_parse().FromCloudFormation.getString(properties.ParameterName):void 0),ret.addPropertyResult("parameterValue","ParameterValue",properties.ParameterValue!=null?cfn_parse().FromCloudFormation.getString(properties.ParameterValue):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFrameworkFrameworkControlPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("controlInputParameters",cdk().listValidator(CfnFrameworkControlInputParameterPropertyValidator))(properties.controlInputParameters)),errors.collect(cdk().propertyValidator("controlName",cdk().requiredValidator)(properties.controlName)),errors.collect(cdk().propertyValidator("controlName",cdk().validateString)(properties.controlName)),errors.collect(cdk().propertyValidator("controlScope",cdk().validateObject)(properties.controlScope)),errors.wrap('supplied properties not correct for "FrameworkControlProperty"')}function convertCfnFrameworkFrameworkControlPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnFrameworkFrameworkControlPropertyValidator(properties).assertSuccess(),{ControlInputParameters:cdk().listMapper(convertCfnFrameworkControlInputParameterPropertyToCloudFormation)(properties.controlInputParameters),ControlName:cdk().stringToCloudFormation(properties.controlName),ControlScope:cdk().objectToCloudFormation(properties.controlScope)}):properties}function CfnFrameworkFrameworkControlPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("controlInputParameters","ControlInputParameters",properties.ControlInputParameters!=null?cfn_parse().FromCloudFormation.getArray(CfnFrameworkControlInputParameterPropertyFromCloudFormation)(properties.ControlInputParameters):void 0),ret.addPropertyResult("controlName","ControlName",properties.ControlName!=null?cfn_parse().FromCloudFormation.getString(properties.ControlName):void 0),ret.addPropertyResult("controlScope","ControlScope",properties.ControlScope!=null?cfn_parse().FromCloudFormation.getAny(properties.ControlScope):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFrameworkPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("frameworkControls",cdk().requiredValidator)(properties.frameworkControls)),errors.collect(cdk().propertyValidator("frameworkControls",cdk().listValidator(CfnFrameworkFrameworkControlPropertyValidator))(properties.frameworkControls)),errors.collect(cdk().propertyValidator("frameworkDescription",cdk().validateString)(properties.frameworkDescription)),errors.collect(cdk().propertyValidator("frameworkName",cdk().validateString)(properties.frameworkName)),errors.collect(cdk().propertyValidator("frameworkTags",cdk().listValidator(cdk().validateCfnTag))(properties.frameworkTags)),errors.wrap('supplied properties not correct for "CfnFrameworkProps"')}function convertCfnFrameworkPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnFrameworkPropsValidator(properties).assertSuccess(),{FrameworkControls:cdk().listMapper(convertCfnFrameworkFrameworkControlPropertyToCloudFormation)(properties.frameworkControls),FrameworkDescription:cdk().stringToCloudFormation(properties.frameworkDescription),FrameworkName:cdk().stringToCloudFormation(properties.frameworkName),FrameworkTags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.frameworkTags)}):properties}function CfnFrameworkPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("frameworkControls","FrameworkControls",properties.FrameworkControls!=null?cfn_parse().FromCloudFormation.getArray(CfnFrameworkFrameworkControlPropertyFromCloudFormation)(properties.FrameworkControls):void 0),ret.addPropertyResult("frameworkDescription","FrameworkDescription",properties.FrameworkDescription!=null?cfn_parse().FromCloudFormation.getString(properties.FrameworkDescription):void 0),ret.addPropertyResult("frameworkName","FrameworkName",properties.FrameworkName!=null?cfn_parse().FromCloudFormation.getString(properties.FrameworkName):void 0),ret.addPropertyResult("frameworkTags","FrameworkTags",properties.FrameworkTags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.FrameworkTags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFrameworkControlScopePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("complianceResourceIds",cdk().listValidator(cdk().validateString))(properties.complianceResourceIds)),errors.collect(cdk().propertyValidator("complianceResourceTypes",cdk().listValidator(cdk().validateString))(properties.complianceResourceTypes)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "ControlScopeProperty"')}function convertCfnFrameworkControlScopePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnFrameworkControlScopePropertyValidator(properties).assertSuccess(),{ComplianceResourceIds:cdk().listMapper(cdk().stringToCloudFormation)(properties.complianceResourceIds),ComplianceResourceTypes:cdk().listMapper(cdk().stringToCloudFormation)(properties.complianceResourceTypes),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnFrameworkControlScopePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("complianceResourceIds","ComplianceResourceIds",properties.ComplianceResourceIds!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.ComplianceResourceIds):void 0),ret.addPropertyResult("complianceResourceTypes","ComplianceResourceTypes",properties.ComplianceResourceTypes!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.ComplianceResourceTypes):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnReportPlan extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnReportPlanPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnReportPlan(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnReportPlan.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_backup_CfnReportPlanProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnReportPlan),error}cdk().requireProperty(props,"reportDeliveryChannel",this),cdk().requireProperty(props,"reportSetting",this),this.attrReportPlanArn=cdk().Token.asString(this.getAtt("ReportPlanArn",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::Backup::ReportPlan",void 0,{tagPropertyName:"reportPlanTags"}),this.reportDeliveryChannel=props.reportDeliveryChannel,this.reportPlanDescription=props.reportPlanDescription,this.reportPlanName=props.reportPlanName,this.reportPlanTags=props.reportPlanTags,this.reportSetting=props.reportSetting}get cfnProperties(){return{reportPlanTags:this.cdkTagManager.renderTags(this.reportPlanTags),reportDeliveryChannel:this.reportDeliveryChannel,reportPlanDescription:this.reportPlanDescription,reportPlanName:this.reportPlanName,reportSetting:this.reportSetting}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnReportPlan.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnReportPlanPropsToCloudFormation(props)}}exports.CfnReportPlan=CfnReportPlan,_e=JSII_RTTI_SYMBOL_1,CfnReportPlan[_e]={fqn:"aws-cdk-lib.aws_backup.CfnReportPlan",version:"2.136.1"},CfnReportPlan.CFN_RESOURCE_TYPE_NAME="AWS::Backup::ReportPlan";function CfnReportPlanReportSettingPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("accounts",cdk().listValidator(cdk().validateString))(properties.accounts)),errors.collect(cdk().propertyValidator("frameworkArns",cdk().listValidator(cdk().validateString))(properties.frameworkArns)),errors.collect(cdk().propertyValidator("organizationUnits",cdk().listValidator(cdk().validateString))(properties.organizationUnits)),errors.collect(cdk().propertyValidator("regions",cdk().listValidator(cdk().validateString))(properties.regions)),errors.collect(cdk().propertyValidator("reportTemplate",cdk().requiredValidator)(properties.reportTemplate)),errors.collect(cdk().propertyValidator("reportTemplate",cdk().validateString)(properties.reportTemplate)),errors.wrap('supplied properties not correct for "ReportSettingProperty"')}function convertCfnReportPlanReportSettingPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnReportPlanReportSettingPropertyValidator(properties).assertSuccess(),{Accounts:cdk().listMapper(cdk().stringToCloudFormation)(properties.accounts),FrameworkArns:cdk().listMapper(cdk().stringToCloudFormation)(properties.frameworkArns),OrganizationUnits:cdk().listMapper(cdk().stringToCloudFormation)(properties.organizationUnits),Regions:cdk().listMapper(cdk().stringToCloudFormation)(properties.regions),ReportTemplate:cdk().stringToCloudFormation(properties.reportTemplate)}):properties}function CfnReportPlanReportSettingPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("accounts","Accounts",properties.Accounts!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.Accounts):void 0),ret.addPropertyResult("frameworkArns","FrameworkArns",properties.FrameworkArns!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.FrameworkArns):void 0),ret.addPropertyResult("organizationUnits","OrganizationUnits",properties.OrganizationUnits!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.OrganizationUnits):void 0),ret.addPropertyResult("regions","Regions",properties.Regions!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.Regions):void 0),ret.addPropertyResult("reportTemplate","ReportTemplate",properties.ReportTemplate!=null?cfn_parse().FromCloudFormation.getString(properties.ReportTemplate):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReportPlanReportDeliveryChannelPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("formats",cdk().listValidator(cdk().validateString))(properties.formats)),errors.collect(cdk().propertyValidator("s3BucketName",cdk().requiredValidator)(properties.s3BucketName)),errors.collect(cdk().propertyValidator("s3BucketName",cdk().validateString)(properties.s3BucketName)),errors.collect(cdk().propertyValidator("s3KeyPrefix",cdk().validateString)(properties.s3KeyPrefix)),errors.wrap('supplied properties not correct for "ReportDeliveryChannelProperty"')}function convertCfnReportPlanReportDeliveryChannelPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnReportPlanReportDeliveryChannelPropertyValidator(properties).assertSuccess(),{Formats:cdk().listMapper(cdk().stringToCloudFormation)(properties.formats),S3BucketName:cdk().stringToCloudFormation(properties.s3BucketName),S3KeyPrefix:cdk().stringToCloudFormation(properties.s3KeyPrefix)}):properties}function CfnReportPlanReportDeliveryChannelPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("formats","Formats",properties.Formats!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.Formats):void 0),ret.addPropertyResult("s3BucketName","S3BucketName",properties.S3BucketName!=null?cfn_parse().FromCloudFormation.getString(properties.S3BucketName):void 0),ret.addPropertyResult("s3KeyPrefix","S3KeyPrefix",properties.S3KeyPrefix!=null?cfn_parse().FromCloudFormation.getString(properties.S3KeyPrefix):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReportPlanPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("reportDeliveryChannel",cdk().requiredValidator)(properties.reportDeliveryChannel)),errors.collect(cdk().propertyValidator("reportDeliveryChannel",cdk().validateObject)(properties.reportDeliveryChannel)),errors.collect(cdk().propertyValidator("reportPlanDescription",cdk().validateString)(properties.reportPlanDescription)),errors.collect(cdk().propertyValidator("reportPlanName",cdk().validateString)(properties.reportPlanName)),errors.collect(cdk().propertyValidator("reportPlanTags",cdk().listValidator(cdk().validateCfnTag))(properties.reportPlanTags)),errors.collect(cdk().propertyValidator("reportSetting",cdk().requiredValidator)(properties.reportSetting)),errors.collect(cdk().propertyValidator("reportSetting",cdk().validateObject)(properties.reportSetting)),errors.wrap('supplied properties not correct for "CfnReportPlanProps"')}function convertCfnReportPlanPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnReportPlanPropsValidator(properties).assertSuccess(),{ReportDeliveryChannel:cdk().objectToCloudFormation(properties.reportDeliveryChannel),ReportPlanDescription:cdk().stringToCloudFormation(properties.reportPlanDescription),ReportPlanName:cdk().stringToCloudFormation(properties.reportPlanName),ReportPlanTags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.reportPlanTags),ReportSetting:cdk().objectToCloudFormation(properties.reportSetting)}):properties}function CfnReportPlanPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("reportDeliveryChannel","ReportDeliveryChannel",properties.ReportDeliveryChannel!=null?cfn_parse().FromCloudFormation.getAny(properties.ReportDeliveryChannel):void 0),ret.addPropertyResult("reportPlanDescription","ReportPlanDescription",properties.ReportPlanDescription!=null?cfn_parse().FromCloudFormation.getString(properties.ReportPlanDescription):void 0),ret.addPropertyResult("reportPlanName","ReportPlanName",properties.ReportPlanName!=null?cfn_parse().FromCloudFormation.getString(properties.ReportPlanName):void 0),ret.addPropertyResult("reportPlanTags","ReportPlanTags",properties.ReportPlanTags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.ReportPlanTags):void 0),ret.addPropertyResult("reportSetting","ReportSetting",properties.ReportSetting!=null?cfn_parse().FromCloudFormation.getAny(properties.ReportSetting):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRestoreTestingPlan extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRestoreTestingPlanPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnRestoreTestingPlan(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnRestoreTestingPlan.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_backup_CfnRestoreTestingPlanProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRestoreTestingPlan),error}cdk().requireProperty(props,"recoveryPointSelection",this),cdk().requireProperty(props,"restoreTestingPlanName",this),cdk().requireProperty(props,"scheduleExpression",this),this.attrRestoreTestingPlanArn=cdk().Token.asString(this.getAtt("RestoreTestingPlanArn",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::Backup::RestoreTestingPlan",void 0,{tagPropertyName:"tags"}),this.recoveryPointSelection=props.recoveryPointSelection,this.restoreTestingPlanName=props.restoreTestingPlanName,this.scheduleExpression=props.scheduleExpression,this.scheduleExpressionTimezone=props.scheduleExpressionTimezone,this.startWindowHours=props.startWindowHours,this.tags=props.tags}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),recoveryPointSelection:this.recoveryPointSelection,restoreTestingPlanName:this.restoreTestingPlanName,scheduleExpression:this.scheduleExpression,scheduleExpressionTimezone:this.scheduleExpressionTimezone,startWindowHours:this.startWindowHours}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRestoreTestingPlan.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnRestoreTestingPlanPropsToCloudFormation(props)}}exports.CfnRestoreTestingPlan=CfnRestoreTestingPlan,_f=JSII_RTTI_SYMBOL_1,CfnRestoreTestingPlan[_f]={fqn:"aws-cdk-lib.aws_backup.CfnRestoreTestingPlan",version:"2.136.1"},CfnRestoreTestingPlan.CFN_RESOURCE_TYPE_NAME="AWS::Backup::RestoreTestingPlan";function CfnRestoreTestingPlanRestoreTestingRecoveryPointSelectionPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("algorithm",cdk().requiredValidator)(properties.algorithm)),errors.collect(cdk().propertyValidator("algorithm",cdk().validateString)(properties.algorithm)),errors.collect(cdk().propertyValidator("excludeVaults",cdk().listValidator(cdk().validateString))(properties.excludeVaults)),errors.collect(cdk().propertyValidator("includeVaults",cdk().requiredValidator)(properties.includeVaults)),errors.collect(cdk().propertyValidator("includeVaults",cdk().listValidator(cdk().validateString))(properties.includeVaults)),errors.collect(cdk().propertyValidator("recoveryPointTypes",cdk().requiredValidator)(properties.recoveryPointTypes)),errors.collect(cdk().propertyValidator("recoveryPointTypes",cdk().listValidator(cdk().validateString))(properties.recoveryPointTypes)),errors.collect(cdk().propertyValidator("selectionWindowDays",cdk().validateNumber)(properties.selectionWindowDays)),errors.wrap('supplied properties not correct for "RestoreTestingRecoveryPointSelectionProperty"')}function convertCfnRestoreTestingPlanRestoreTestingRecoveryPointSelectionPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnRestoreTestingPlanRestoreTestingRecoveryPointSelectionPropertyValidator(properties).assertSuccess(),{Algorithm:cdk().stringToCloudFormation(properties.algorithm),ExcludeVaults:cdk().listMapper(cdk().stringToCloudFormation)(properties.excludeVaults),IncludeVaults:cdk().listMapper(cdk().stringToCloudFormation)(properties.includeVaults),RecoveryPointTypes:cdk().listMapper(cdk().stringToCloudFormation)(properties.recoveryPointTypes),SelectionWindowDays:cdk().numberToCloudFormation(properties.selectionWindowDays)}):properties}function CfnRestoreTestingPlanRestoreTestingRecoveryPointSelectionPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("algorithm","Algorithm",properties.Algorithm!=null?cfn_parse().FromCloudFormation.getString(properties.Algorithm):void 0),ret.addPropertyResult("excludeVaults","ExcludeVaults",properties.ExcludeVaults!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.ExcludeVaults):void 0),ret.addPropertyResult("includeVaults","IncludeVaults",properties.IncludeVaults!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.IncludeVaults):void 0),ret.addPropertyResult("recoveryPointTypes","RecoveryPointTypes",properties.RecoveryPointTypes!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.RecoveryPointTypes):void 0),ret.addPropertyResult("selectionWindowDays","SelectionWindowDays",properties.SelectionWindowDays!=null?cfn_parse().FromCloudFormation.getNumber(properties.SelectionWindowDays):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRestoreTestingPlanPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("recoveryPointSelection",cdk().requiredValidator)(properties.recoveryPointSelection)),errors.collect(cdk().propertyValidator("recoveryPointSelection",CfnRestoreTestingPlanRestoreTestingRecoveryPointSelectionPropertyValidator)(properties.recoveryPointSelection)),errors.collect(cdk().propertyValidator("restoreTestingPlanName",cdk().requiredValidator)(properties.restoreTestingPlanName)),errors.collect(cdk().propertyValidator("restoreTestingPlanName",cdk().validateString)(properties.restoreTestingPlanName)),errors.collect(cdk().propertyValidator("scheduleExpression",cdk().requiredValidator)(properties.scheduleExpression)),errors.collect(cdk().propertyValidator("scheduleExpression",cdk().validateString)(properties.scheduleExpression)),errors.collect(cdk().propertyValidator("scheduleExpressionTimezone",cdk().validateString)(properties.scheduleExpressionTimezone)),errors.collect(cdk().propertyValidator("startWindowHours",cdk().validateNumber)(properties.startWindowHours)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnRestoreTestingPlanProps"')}function convertCfnRestoreTestingPlanPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnRestoreTestingPlanPropsValidator(properties).assertSuccess(),{RecoveryPointSelection:convertCfnRestoreTestingPlanRestoreTestingRecoveryPointSelectionPropertyToCloudFormation(properties.recoveryPointSelection),RestoreTestingPlanName:cdk().stringToCloudFormation(properties.restoreTestingPlanName),ScheduleExpression:cdk().stringToCloudFormation(properties.scheduleExpression),ScheduleExpressionTimezone:cdk().stringToCloudFormation(properties.scheduleExpressionTimezone),StartWindowHours:cdk().numberToCloudFormation(properties.startWindowHours),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnRestoreTestingPlanPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("recoveryPointSelection","RecoveryPointSelection",properties.RecoveryPointSelection!=null?CfnRestoreTestingPlanRestoreTestingRecoveryPointSelectionPropertyFromCloudFormation(properties.RecoveryPointSelection):void 0),ret.addPropertyResult("restoreTestingPlanName","RestoreTestingPlanName",properties.RestoreTestingPlanName!=null?cfn_parse().FromCloudFormation.getString(properties.RestoreTestingPlanName):void 0),ret.addPropertyResult("scheduleExpression","ScheduleExpression",properties.ScheduleExpression!=null?cfn_parse().FromCloudFormation.getString(properties.ScheduleExpression):void 0),ret.addPropertyResult("scheduleExpressionTimezone","ScheduleExpressionTimezone",properties.ScheduleExpressionTimezone!=null?cfn_parse().FromCloudFormation.getString(properties.ScheduleExpressionTimezone):void 0),ret.addPropertyResult("startWindowHours","StartWindowHours",properties.StartWindowHours!=null?cfn_parse().FromCloudFormation.getNumber(properties.StartWindowHours):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRestoreTestingSelection extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRestoreTestingSelectionPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnRestoreTestingSelection(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnRestoreTestingSelection.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_backup_CfnRestoreTestingSelectionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRestoreTestingSelection),error}cdk().requireProperty(props,"iamRoleArn",this),cdk().requireProperty(props,"protectedResourceType",this),cdk().requireProperty(props,"restoreTestingPlanName",this),cdk().requireProperty(props,"restoreTestingSelectionName",this),this.iamRoleArn=props.iamRoleArn,this.protectedResourceArns=props.protectedResourceArns,this.protectedResourceConditions=props.protectedResourceConditions,this.protectedResourceType=props.protectedResourceType,this.restoreMetadataOverrides=props.restoreMetadataOverrides,this.restoreTestingPlanName=props.restoreTestingPlanName,this.restoreTestingSelectionName=props.restoreTestingSelectionName,this.validationWindowHours=props.validationWindowHours}get cfnProperties(){return{iamRoleArn:this.iamRoleArn,protectedResourceArns:this.protectedResourceArns,protectedResourceConditions:this.protectedResourceConditions,protectedResourceType:this.protectedResourceType,restoreMetadataOverrides:this.restoreMetadataOverrides,restoreTestingPlanName:this.restoreTestingPlanName,restoreTestingSelectionName:this.restoreTestingSelectionName,validationWindowHours:this.validationWindowHours}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRestoreTestingSelection.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnRestoreTestingSelectionPropsToCloudFormation(props)}}exports.CfnRestoreTestingSelection=CfnRestoreTestingSelection,_g=JSII_RTTI_SYMBOL_1,CfnRestoreTestingSelection[_g]={fqn:"aws-cdk-lib.aws_backup.CfnRestoreTestingSelection",version:"2.136.1"},CfnRestoreTestingSelection.CFN_RESOURCE_TYPE_NAME="AWS::Backup::RestoreTestingSelection";function CfnRestoreTestingSelectionKeyValuePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("key",cdk().requiredValidator)(properties.key)),errors.collect(cdk().propertyValidator("key",cdk().validateString)(properties.key)),errors.collect(cdk().propertyValidator("value",cdk().requiredValidator)(properties.value)),errors.collect(cdk().propertyValidator("value",cdk().validateString)(properties.value)),errors.wrap('supplied properties not correct for "KeyValueProperty"')}function convertCfnRestoreTestingSelectionKeyValuePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnRestoreTestingSelectionKeyValuePropertyValidator(properties).assertSuccess(),{Key:cdk().stringToCloudFormation(properties.key),Value:cdk().stringToCloudFormation(properties.value)}):properties}function CfnRestoreTestingSelectionKeyValuePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse().FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse().FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRestoreTestingSelectionProtectedResourceConditionsPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("stringEquals",cdk().listValidator(CfnRestoreTestingSelectionKeyValuePropertyValidator))(properties.stringEquals)),errors.collect(cdk().propertyValidator("stringNotEquals",cdk().listValidator(CfnRestoreTestingSelectionKeyValuePropertyValidator))(properties.stringNotEquals)),errors.wrap('supplied properties not correct for "ProtectedResourceConditionsProperty"')}function convertCfnRestoreTestingSelectionProtectedResourceConditionsPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnRestoreTestingSelectionProtectedResourceConditionsPropertyValidator(properties).assertSuccess(),{StringEquals:cdk().listMapper(convertCfnRestoreTestingSelectionKeyValuePropertyToCloudFormation)(properties.stringEquals),StringNotEquals:cdk().listMapper(convertCfnRestoreTestingSelectionKeyValuePropertyToCloudFormation)(properties.stringNotEquals)}):properties}function CfnRestoreTestingSelectionProtectedResourceConditionsPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("stringEquals","StringEquals",properties.StringEquals!=null?cfn_parse().FromCloudFormation.getArray(CfnRestoreTestingSelectionKeyValuePropertyFromCloudFormation)(properties.StringEquals):void 0),ret.addPropertyResult("stringNotEquals","StringNotEquals",properties.StringNotEquals!=null?cfn_parse().FromCloudFormation.getArray(CfnRestoreTestingSelectionKeyValuePropertyFromCloudFormation)(properties.StringNotEquals):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRestoreTestingSelectionPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("iamRoleArn",cdk().requiredValidator)(properties.iamRoleArn)),errors.collect(cdk().propertyValidator("iamRoleArn",cdk().validateString)(properties.iamRoleArn)),errors.collect(cdk().propertyValidator("protectedResourceArns",cdk().listValidator(cdk().validateString))(properties.protectedResourceArns)),errors.collect(cdk().propertyValidator("protectedResourceConditions",CfnRestoreTestingSelectionProtectedResourceConditionsPropertyValidator)(properties.protectedResourceConditions)),errors.collect(cdk().propertyValidator("protectedResourceType",cdk().requiredValidator)(properties.protectedResourceType)),errors.collect(cdk().propertyValidator("protectedResourceType",cdk().validateString)(properties.protectedResourceType)),errors.collect(cdk().propertyValidator("restoreMetadataOverrides",cdk().hashValidator(cdk().validateString))(properties.restoreMetadataOverrides)),errors.collect(cdk().propertyValidator("restoreTestingPlanName",cdk().requiredValidator)(properties.restoreTestingPlanName)),errors.collect(cdk().propertyValidator("restoreTestingPlanName",cdk().validateString)(properties.restoreTestingPlanName)),errors.collect(cdk().propertyValidator("restoreTestingSelectionName",cdk().requiredValidator)(properties.restoreTestingSelectionName)),errors.collect(cdk().propertyValidator("restoreTestingSelectionName",cdk().validateString)(properties.restoreTestingSelectionName)),errors.collect(cdk().propertyValidator("validationWindowHours",cdk().validateNumber)(properties.validationWindowHours)),errors.wrap('supplied properties not correct for "CfnRestoreTestingSelectionProps"')}function convertCfnRestoreTestingSelectionPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnRestoreTestingSelectionPropsValidator(properties).assertSuccess(),{IamRoleArn:cdk().stringToCloudFormation(properties.iamRoleArn),ProtectedResourceArns:cdk().listMapper(cdk().stringToCloudFormation)(properties.protectedResourceArns),ProtectedResourceConditions:convertCfnRestoreTestingSelectionProtectedResourceConditionsPropertyToCloudFormation(properties.protectedResourceConditions),ProtectedResourceType:cdk().stringToCloudFormation(properties.protectedResourceType),RestoreMetadataOverrides:cdk().hashMapper(cdk().stringToCloudFormation)(properties.restoreMetadataOverrides),RestoreTestingPlanName:cdk().stringToCloudFormation(properties.restoreTestingPlanName),RestoreTestingSelectionName:cdk().stringToCloudFormation(properties.restoreTestingSelectionName),ValidationWindowHours:cdk().numberToCloudFormation(properties.validationWindowHours)}):properties}function CfnRestoreTestingSelectionPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("iamRoleArn","IamRoleArn",properties.IamRoleArn!=null?cfn_parse().FromCloudFormation.getString(properties.IamRoleArn):void 0),ret.addPropertyResult("protectedResourceArns","ProtectedResourceArns",properties.ProtectedResourceArns!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.ProtectedResourceArns):void 0),ret.addPropertyResult("protectedResourceConditions","ProtectedResourceConditions",properties.ProtectedResourceConditions!=null?CfnRestoreTestingSelectionProtectedResourceConditionsPropertyFromCloudFormation(properties.ProtectedResourceConditions):void 0),ret.addPropertyResult("protectedResourceType","ProtectedResourceType",properties.ProtectedResourceType!=null?cfn_parse().FromCloudFormation.getString(properties.ProtectedResourceType):void 0),ret.addPropertyResult("restoreMetadataOverrides","RestoreMetadataOverrides",properties.RestoreMetadataOverrides!=null?cfn_parse().FromCloudFormation.getMap(cfn_parse().FromCloudFormation.getString)(properties.RestoreMetadataOverrides):void 0),ret.addPropertyResult("restoreTestingPlanName","RestoreTestingPlanName",properties.RestoreTestingPlanName!=null?cfn_parse().FromCloudFormation.getString(properties.RestoreTestingPlanName):void 0),ret.addPropertyResult("restoreTestingSelectionName","RestoreTestingSelectionName",properties.RestoreTestingSelectionName!=null?cfn_parse().FromCloudFormation.getString(properties.RestoreTestingSelectionName):void 0),ret.addPropertyResult("validationWindowHours","ValidationWindowHours",properties.ValidationWindowHours!=null?cfn_parse().FromCloudFormation.getNumber(properties.ValidationWindowHours):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
