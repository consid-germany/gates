"use strict";var I=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var m=Object.prototype.hasOwnProperty;var _=(e,n)=>{for(var r in n)I(e,r,{get:n[r],enumerable:!0})},D=(e,n,r,o)=>{if(n&&typeof n=="object"||typeof n=="function")for(let i of l(n))!m.call(e,i)&&i!==r&&I(e,i,{get:()=>n[i],enumerable:!(o=T(n,i))||o.enumerable});return e};var N=e=>D(I({},"__esModule",{value:!0}),e);var F={};_(F,{handler:()=>p});module.exports=N(F);var t=require("@aws-sdk/client-secrets-manager"),a=require("@aws-sdk/client-cloudfront"),c="AWSPENDING",E="AWSCURRENT",g="Deployed",w=f("CLOUDFRONT_DISTRIBUTION_ID"),C=f("X_VERIFY_ORIGIN_HEADER_NAME"),V=f("ORIGIN_TEST_URL"),s=new t.SecretsManagerClient,R=new a.CloudFrontClient,p=async e=>{switch(e.Step){case"createSecret":await b(e.SecretId,e.ClientRequestToken);break;case"setSecret":await O(e.SecretId,e.ClientRequestToken);break;case"testSecret":await h(e.SecretId,e.ClientRequestToken);break;case"finishSecret":await U(e.SecretId,e.ClientRequestToken);break}};async function b(e,n){await s.send(new t.GetSecretValueCommand({SecretId:e}));try{await s.send(new t.GetSecretValueCommand({SecretId:e,VersionId:n,VersionStage:c}))}catch(r){if(r instanceof t.ResourceNotFoundException||r instanceof t.InvalidRequestException){let o=await s.send(new t.GetRandomPasswordCommand({ExcludePunctuation:!0}));await s.send(new t.PutSecretValueCommand({SecretId:e,ClientRequestToken:n,SecretString:o.RandomPassword,VersionStages:[c]}))}}}async function O(e,n){if((await R.send(new a.GetDistributionCommand({Id:w}))).Distribution?.Status!=g)throw new Error(`cloudfront distribution is not in state ${g}`);let o=await s.send(new t.GetSecretValueCommand({SecretId:e,VersionId:n,VersionStage:c})),i=await R.send(new a.GetDistributionConfigCommand({Id:w})),d=i.DistributionConfig;d?.Origins?.Items?.forEach(S=>{S.CustomHeaders?.Items?.filter(u=>u.HeaderName===C).forEach(u=>{u.HeaderValue=o.SecretString})}),await R.send(new a.UpdateDistributionCommand({Id:w,IfMatch:i.ETag,DistributionConfig:d}))}async function h(e,n){let r=await s.send(new t.GetSecretValueCommand({SecretId:e,VersionId:n,VersionStage:c}));if(r.SecretString===void 0)throw new Error("could not find pending secret value");if(!(await fetch(V,{headers:{[C]:r.SecretString}})).ok)throw new Error("failed to access origin test url")}async function U(e,n){let r=await s.send(new t.DescribeSecretCommand({SecretId:e}));if(r.VersionIdsToStages===void 0)throw new Error("could not find versions of secret");let o=Object.entries(r.VersionIdsToStages).find(([d,S])=>S.includes(E));if(o===void 0)throw new Error("could not find current version of secret");o[0]!=n&&await s.send(new t.UpdateSecretVersionStageCommand({SecretId:e,VersionStage:E,MoveToVersionId:n,RemoveFromVersionId:o[0]}))}function f(e){let n=process.env[e];if(!n)throw new Error(`${e} environment variable is not set`);return n}0&&(module.exports={handler});
