import { Construct } from "constructs";
export interface Domain {
    readonly domainName: string;
    readonly zoneDomainName?: string;
    readonly gitHubApiSubdomain?: string;
}
export interface GitHubApi {
    readonly allowedSubPatterns: string[];
}
export interface GatesProps {
    /**
     * A name for the application.
     * If not specified, the default app name `gates` is used.
     */
    readonly appName?: string;
    readonly domain?: Domain;
    readonly ipAllowList?: string[];
    readonly gitHubApi?: GitHubApi;
    readonly globalStackName?: string;
    readonly frontendAssetsBucketName?: string;
    readonly demoMode?: boolean;
}
export declare class Gates extends Construct {
    private readonly stack;
    private readonly globalStack;
    constructor(scope: Construct, id: string, props: GatesProps);
    private lookupHostedZone;
    private createGitHubJwtAuthFunction;
    private createGitHubApi;
    private createGitHubDomainMapping;
    private createFrontendAssetsDeployment;
    private createFrontendAssetsBucket;
    private createWebDistribution;
    private createGatesApi;
    private createVerifyOriginSecretRotation;
    private createVerifyOriginAuthFunction;
    private createVerifyOriginSecret;
    private createApiFunction;
    private createViewerCertificate;
    private createGatesTable;
    private createGlobalCertificate;
    private createGlobalWebAcl;
}
